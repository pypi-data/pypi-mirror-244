
import RNA

minimum_probability = 0.05
minimum_pairing_distance = 3


def extract_probabilities(
    basepair_probs,
    minimum_probability: float,
    minimum_pairing_distance: int,
) -> dict[tuple[int, int]: float]:
    bps = {}
    for i in range(1, len(basepair_probs)):
        for j in range(i + 1, len(basepair_probs[i])):
            if basepair_probs[i][j] > (minimum_probability * 10) and j - i > minimum_pairing_distance:
                bps[(i - 1, j - 1)] = basepair_probs[i][j]

    # Remove lonely pairings
    lefties = [i for (i, _) in bps.keys()]
    righties = [j for (_, j) in bps.keys()]
    bps_to_remove = []
    for (i, j) in bps.keys():
        if (
            (not i - 1 in lefties and i + 1 in lefties)
            and (not j - 1 in righties and j + 1 in righties)
        ):
            bps_to_remove.append((i, j))

    map(lambda key: bps.pop(key), bps_to_remove)
    return bps


# sequence = 'GGAUCAUAUAAUCGCGUGGAUAUGGCACGCAAGUUUCUACCGGGCACCGUAAAUGUCCGACUAUGGUC'
ali = [
    "CAUACUACAGGAGUAG-UGGGAAA-UAAUGUGUA-----AAUCAUUGGCUGUACUC-----GCAACGGU---------AAA",
    "-UACUGAAA-GUAUUG-UGGGAAA-UAAUGUGUA-----AAUCAUUGACCGUUCCU-----GCGCUGGUAA----GAAUAA",
    "AUACUGAAAUACAUGG-UGGGAAA-CAAUGUGGA-----AAUCAUUAACUGUUCCU-----GCAACGGUAAG---AACAAG",
    "UAGCUGAAAUGCAUGG-UGGGAAAUUCGUGUGAA-----AGUCAUGAGCUGUACCC-----GCAACCGU---------AUA",
    "UGACUGAAAUGCAUGG-UGGGAAAUCUGUGUGAA-----ACUCAUAGGCUGUACCU-----GCAACCGU---------AA-",
    "AAGCUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACCGU---------AA-",
    "AUACUGAAAAGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUCCCU-----GCAACCGU---------AA-",
    "GUAUCGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAAAGGU---------UAA",
    "AUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACGGU---------UAU",
    "UAACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUCUUCCU-----GGAACCGU---------AA-",
    "AUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACGGU---------AAU",
    "AUGUCGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "GUGCUGAAAUGCAUGG-UGGGAAAUUAAUGUGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "GUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGGA-----AUUCACUGGCUGUACCU-----GCAACCGU---------AA-",
    "GUACUGAAG--UUUGG-UGGGGAAUCAGUGUGAA-----AUUCAUUGGCUCUACCU-----GGAACCGU---------AA-",
    "AUACCGAAAU-UUAGG-UGGGGAA-CAAUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACGGUGUG--AACGAA-",
    "AUAUUG--------GUCUGGGAAAUAAGUGUGAA-----AUUCAUUUGCUGUUCCU-----GCAACGGU---------UAA",
    "UUGCCGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCACUGGCUGUUCCU-----GCAACGGU---------UAA",
    "AUAUUGAAAUGCAUGG-UGGGAAAUCUAAGUGUA-----AUUCUUAGGCUGUACCU-----GCAACCGU---------AA-",
    "AAGUUGAA-U-CUUGG-UGGGGAA-UAAUGUGAA-----AAUCAUUAACUGUUCCU-----GCAACGGUAAUA-ACUUAAU",
    "GUGCUAAAAG-CAUAG-UGGGAAAGUGACGUGAA-----AUUCGUCCACAUUACUU-----GAUAAGGU---------CAU",
    "GUGUUGAAAUGCAUGG-UGGGUAAUCAAUGUGAA-----AUUCGUUGGCUGUUCCU-----GCAACGGU---------UAU",
    "GUAUUGAAU--CUUGG-UGGGGAA-UAAUGUGAA-----AAUCAUUAGCUGUUCCU-----GCAACGGU---------AA-",
    "GUACUGAAUAAGUGAG-UGGGGAA-UAAUGUGUG-----AAUCAUUAACUGUUCCU-----GCAACGGUAA----AACCUA",
    "GUACUGAAU--CUUGA-CGGGGAAUUAGUGCGAA-----AUUCACUUGCUGUUCCU-----GCAACCGU----------AU",
    "AUACUGAAU--CGUGU-UGGGGAAGCAAGGUGAA-----AUACCAUGGCUCUACCA-----GGAACCGU----------AU",
    "AUGCUGCAAUGUAUGG-UGGGAAAUUAAUGUGUA-----AUUCAUUAGCUGUUCCU-----GCAACGGUAAU---AACAU-",
    "UAAAUAAGUUUAUAUG-UGAUGAAGUAGAGUGAA-----AUUCUCUCACUGU-CGC-----GCAACGGU---------UAA",
    "GGCCUAAAAG-CGUAG-UGGGAAAGUGACGUGAA-----AUUCGUCCAGAUUACUU-----GAUACGGU---------UAU",
    "UUCCUAAAAG-CAUAG-UGGGAAAGAGACGUGUA-----AUUCGUCCACAUUACUU-----GAUACGGU---------GAU",
    "GUGUUGAAA--CUUGG-UGGGGAAUCAGUGCGUA-----AUUCAUUGGCUCUACCU-----GGAACCGU---------AA-",
    "CAACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACGGU---------AA-",
    "AUACUGAAG--UUUGG-UGGGGAAUCAGUGUGAA-----AUUCAUUGGCUCUACCU-----GGAACCGU---------AA-",
    "AUGUUGAAAUGUAUGG-UGGGAAAUCAAUGUGAA-----ACUCAUUGGCUGUUCCU-----GCAACGGU---------AA-",
    "AUACUGAAGU-UUAGG-UGGGGAA-CAAUGUGAG-----AUUCAUUGACUGUUCCU-----GCAACGGUGUG---AACGAA",
    "CUGCUGAAU--CUUAG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "GCAUUGAAU--CGUGA-UGGGAAAUUAAUGUGAA-----AAUCAUUAGCUGUGCCU-----GCAACGGU---------UAA",
    "ACACUGAAAUGCUUGG-UGGGAAAUCAAAGUGAA-----AUUCUUUGGCUGUACCU-----GCAAUCGU---------GAA",
    "AUACUGAAA-GCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACCGU---------AA-",
    "AUGUUGAAAUGCAUGG-UGGGAAAUCAGUGUGAG-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUACUGAAU--CAUGG-UGGGGAA-CAAUGUGAA-----AUUCAUUGACUGUUCCU-----GCAACGGUAAA---AGUAAA",
    "UCGUCGAAAUGCAUGG-UGGGGAAUCAGUGUGAA-----AUUCGCUGGCUGUUCCU-----GCAACCGU---------AU-",
    "UAGCUGAAA--GUUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUGCCU-----GCAACCGU---------AA-",
    "GUACUGAAGU-UUAGG-UGGGGAA-CAAUGUGCA-----AAUCAUUGACUAUCCCU-----GUAACGGUAAG---AAUUA-",
    "AUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACCGU---------AA-",
    "GGCCUAAAAG-UGUAG-UGGGAAAGUGACGUGAA-----AUUCGUCCAGAUUACUU-----GAUACGGU---------UAU",
    "AUACUGAAA--CAUGG-UGGGGAAUUAAUGUGAA-----AUUCAUUAGCUGUUCCU-----GCAACGGU---------AA-",
    "GUGCAUUU---GAAGU-AGGGAAAAUUCUGU-AA-----AUUCAGAUACUACACCC-----GUAACGGUU-------AAA-",
    "ACACUGAAGUACAUGG-UGGGAAA-UAAUGUGAG-----AAUCAUUAACUGUUCGU-----GCAACGGUAUUUUUUAUUUA",
    "AUGCUGAA-----AGG-UGGGGAAUCAGUGUGAA-----AUACAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "GAAAUGCA----UGGG-UGGGAAAUCAGUGUGAA-----AUUCACUGGCUGUACCU-----GCAACCGU---------AA-",
    "UUCCUAAAAG-CAUAG-UGGGAAAGCGACGUGAA-----AUUCGUUCACAUUACUU-----GAUACGGU---------UAU",
    "AUACUGAAAUGCAUGG-UGGGAAAUUAGUGUGUA-----AUUCACUUGCUGUACCU-----GCAACCGU----------AG",
    "AUACUGAAAUGCAUGG-UGGGAAAUAAGUGUGAA-----AUUCACUUGCUGUUCCU-----GCAACGGU---------UAA",
    "ACUUUGAA---UUUGG-UGGGGAAUUAAUGUGAA-----AUUCAUUAGCUGUUCCU-----GCAACGGU---------AA-",
    "GUAUUGAAU--CUUGA-UGGGGAA-UAAUGUGAA-----AAUCAUUAGCUGUUCCU-----GCAACGGU---------AA-",
    "AUACUGAAAUGCAUGG-UGGGAAAUAAGUGCGAA-----AUUCACUUGCUGUACCU-----GCAACCGU---------AA-",
    "AUACUGAAAUGCAUGG-UGGGAAAUCUUUGUGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUACUGAAU--CAUGU-UGGGGAAUCAAGGUGCA-----AUUCCAUGGCUCUACCA-----GGAACCGU---------AA-",
    "AUACUGA--UG--UGG-UAGGGAA-UAAUGUGCA-----AUUCAUUAACUGUUCCU-----GCAACGGUAAA---AACUAA",
    "AUACCGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUCCCU-----GCAACCGU---------AA-",
    "UAGCUGAAA--GUUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACCGU---------AA-",
    "ACGCUGAAAUGCUUGG-UGGGAAAUAAGUGUGUA-----AUUCAUUUGCUGUACCU-----GCAACCGU---------AA-",
    "GUAUUGAA-U-CUUGG-UGGGGAAUCAGUGUGAA-----AUUCAUUGGCUCUUCCU-----GGAACCGU---------AA-",
    "CUGUUGAA----UUGG-UGGGGAAUCAGUGUGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUACUGAAU--CGUGU-UGGGGAAUCAAGGUGAA-----AUUCCAUGGCUCUACCA-----GGAACCGU---------AA-",
    "AUACUGAAG--UUUGG-UGGGGAAUCAGUGUGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AAGUCGAAAUGCUUGG-UGGGAAAUCAGUGUGAA-----AUUCACUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUACUGAA---UUUGG-UGGAAAAUCAAUGUGAA-----AUUCAUUAAUUCUUCCU-----GGAACCGU---------UAA",
    "-------------UGU-UGGGGAU-CAAGGUGAA-----AUUCCAUGGCUCUACCA-----GGAACCGU---------AA-",
    "AUACUGAAU--CAUGG-UGGGGAA-CAAUGUGAA-----AUUCAUUGACUGUUCCU-----GCAACGGUAAA---AGUAAA",
    "GUACUGAAAAAGUGAG-UGGGGAAUCAGUGUGAA-----AUUCACUAGCUGUACCU-----GCAACGGU---------UAA",
    "AUACUGAAA--UUUGG-UGGGGAAUCAGUGUGAA-----AUUCAUUGGCUCUACCU-----GGAACCGU---------AA-",
    "GUACUGUUAU-UAAGG-UGGGAAA-UGAUGUGAA-----AUUCAUCAGCUGUGCUC-----GCAACGGUA------AAUUA",
    "AGACUGAAAUGCAUGG-UGGGAAAUCUGUGUGAA-----AUUCACUUGCUGUUCCU-----GCAACCGU---------AU-",
    "CAUUUGAA------GU-AGGGAAAAUUCUGUAAA------UUCAGAUACUACACCC-----GUAACGGU---------UAA",
    "AGGCUGAAU--CAUGG-UGGGGAAUUAAUGUGUA-----AUUCAUUAGCUGUUCCU-----GCAACGGU---------UAA",
    "UUCCUAAAAG-CAUAG-UGGGAAAGCGACGUGUA-----AUUCGUCCACAGUACUU-----GCUACGGU---------CAU",
    "GUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACUGU---------UAU",
    "UUGCUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUACUGAAAAGCAUGG-UGGGAAA-UAAUGUGCA-----AAUCAUUAGCUGUUCCU-----GCAACGGUAAA---GAUAA-",
    "AUACUGAAAUGCAUGG-UGGGAAAUAAGUGCAUA-----AUUAGCUUGCUGUACCU-----GCAACCGU---------GA-",
    "GUACUGAAUAAGUGAG-UGGGGAA-UAAUGUGAA-----AAUCAUUAACUGUUCCU-----GCAACGGUAA----GGAAAA",
    "GUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGUA-----AUUCAUUGGCUGUGCCU-----GCAACCGU---------AA-",
    "AUACUGAAAG-CAUGG-UGGAAAA-CAAUGUGUG-----AUUCAUUGGCUGUACUC-----GCAACGGUAAG---AACGU-",
    "AUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AG-",
    "AUACUGAAU--CUUGA-CGGGGAAUUAGUGCGAA-----AUUCACUUGCUGUUCCU-----GCAACCGU----------AU",
    "AUGCUGAAAUGCAUGG-UGGGAAAUCAAUGCGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "GUGCUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACCGU---------AA-",
    "AUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACGGU---------AA-",
    "GUAUUGAAGUACUUGG-UGGGGAAUCAAUGUGCA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUACUGAAU--CAUGG-UGGGGAA-UAAUGUGAG-----AAUCAUUAGCUGUUCCU-----GCAACGGU---------AA-",
    "AAGCUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUGCCU-----GCAACCGU----------AG",
    "AUACUGAA----UUGG-UAGGAAA-UAAUGUGAA-----AAUCAUUAACUGUUCCU-----GCAACGGUG-------AAAA",
    "GUACUGAAAUGCAUGG-UGGGAAAUUAGUGCGAA-----AUUCACUUGCUGUUCCU-----GCAACGGU---------UAU",
    "AUAUUGAAU--CUUGG-UGGGGAAUCAAUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACCGU---------AA-",
    "GUGCUAAAAG-CAUGG-UGGGAAAGUGACGUGUA-----AUUCGUCCACAUUACUU-----GAUACGGU---------UAU",
    "AUAUUGAAAUGCAUGG-UGGGAAAUCAGUGUGGA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "GUGUUGAAAUGCAUGG-UGGGAAAUAAGUGUGAA-----AUUCACUAGCUGUUCCU-----GCAACGGU---------AA-",
    "GUAUUGAAU--CUUGG-UGGGGAA-UAAUGUGAA-----AAUCAUUAGCUGUUCCU-----GCAACGGU---------AA-",
    "GUACUGAAAUGCAUGG-UGGGAAAUCAAUGUGUA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AAGCUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUACUGA-AUGUAAGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUCUUCCU-----GGAACCGU---------AA-",
    "AGGCUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACCGU---------AA-",
    "GUAUUGAAU--CUUGG-UGGGGAAUUAAUGUGAA-----AUUCAUUAGCUGUUCCU-----GCAACGGA---------UAA",
    "GUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACCGU---------AA-",
    "AUACUGAAAUGCAUGG-UGGGAAAUCGAUGCGAA-----AUUCAUCGGCUGAGCCU-----GCAACCGU---------UAA",
    "AUAUUGAAG--UUUGG-UGGGGAAUCAGUGUGAA-----AUUCAUUGGCUCUACCU-----GGAACCGU---------AA-",
    "GUACUGAAUG-AAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACCGU---------AAA",
    "GUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACCGU---------AA-",
    "AUGCUGAAAUGCAUGG-UGGGAAAUCGAUGUGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUACUGAAAUGCAUGG-UGGGGAAUCAAUGCGAA-----AUUCGUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUCUUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AAUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "GUGUUAAAAG-CAUAG-UGGGAAAGUGACGUGUA-----AUUCGUCCACAUUACUU-----GAUGCGGU---------UAU",
    "AUACCGAAAUGCAUGG-UGGGAAAUCAGUGUGGA-----AUUCAUUGGCUGUCCCU-----GCA-CCGU---------AA-",
    "UAGUUGAAAUGCAUGG-UGGGAAAUAAAUGAGUA-----UUUCAUUUGCUGUACCU-----GCAACCGU---------AU-",
    "AGAUUGAAAUGCAUGG-UGGGAAAUCAGUGUUAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUGCUGAAG--UUUGG-UGGGGAAUCAGUGUGAA-----AUUCACUGGCUGUGCCU-----GCAACCGU---------AA-",
    "GUGCAUUU---GAAGU-AGGGAAAAUUCUGU-AA-----AUUCAGAUACUACACCC-----GUAACGGUU-------AAA-",
    "GUAUUGAG--UCUUGG-UGGGAAAUCAGUGUGUA-----AUUCAUUGGCUCUUCCU-----GGAACCGU----------AU",
    "AUAUUGAA-----UGG-UGGGGAAUCAGUGCGAA-----AUUCACUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUAUUG------UCGG-UGGGAAAUUAGUGUGAA-----AUUCACUUGCUGUUCCU-----GCAACGGU---------UAA",
    "AUAUCGAAU--CUUGA-UGGGGAA-UAAUGUGCA-----AAUCAUUAGCUGUUCCU-----GCAACGGU---------AAA",
    "AUAUUGAU----AUGG-UGGGGAAUCAGUGUGAA-----AUACAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUAGUAAAUAAUUUAG-UAGGAAAACAGCGCGAA-----AUUUGUUGGCUAUACCU-----GCAACCGU---------UAA",
    "GGACUGAAU--CAUGG-UGGGGAAUUAAUGUGAA-----AUUCAUUAGCUGUUCCU-----GCAACGGU---------UAA",
    "GUGCUGAAAUGCAUGG-UGGGAAA-CAAUGUGUA-----AAUCAUUGACUGUUCCU-----GCAACGGUAAA---AACGAA",
    "UAACUCUCAC-GAGGU-UGGGAAA-GUCAGUGAAUACAUAAUCUGACACUGCCCCC-----GCAACGGUG-------AACA",
    "AUACUGAAAUGCAUGG-UGGGGAA-CAAUGUGAA-----AUUCAUUGACUGUUCCU-----GCAACGGUGUG---AACAU-",
    "GUAUUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCGCUGGCUGUUCCU-----GCAACCGU---------AA-",
    "AUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUGCUGAAU--CUUGG-UGGGGAAUCAAUGUGUA-----AAUCGUUGACUGUACCU-----GCAACCGU---------AA-",
    "AUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUCCCU-----GCAACCGU---------AA-",
    "AUACUGAAAAGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACCGU---------AA-",
    "AUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACCGU---------AA-",
    "GUACUGAAU--CGUGA-UGGGGAA-UAAUGUGAA-----AUUCAUUAGCUGUACCU-----GCAACGGU---------GAA",
    "GUACUGAAACGCAUGG-UGGGGAAUAAAUGUGAA-----AUUCAUUUGCUGUUCCU-----GCAACCGU---------AA-",
    "GUAUUGAAU--CAUGG-UGGGGAAUUAAUGAGAA-----UUUCAUUUGCUGUUCCU-----GCAACCGU---------AA-",
    "UUGCUGAAU--CAUGG-UGGGGAAUCAGUGUGAA-----AUUCAUUGGCUCUUCCU-----GGAACCGU---------AA-",
    "GUGUUGAAUAAGUGAG-UGGGGAAUCAGUGUGAA-----AUUCAUUGGCUGUGCCU-----GCAACCGU---------AA-",
    "AUACCGAAAUGCUUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUACCU-----GCAACCGU---------AA-",
    "AUACUGAAAUGCAUGG-UGGGAAAUCAGUGUGAA-----AUUCAUUGGCUGUUCCU-----GCAACCGU---------AA-",
    "GGGCUAAAAG-CAUGG-UGGGAAAGUGACGUGUA-----AUUCGUCCACAUUACUU-----GAUACGGU---------UAU",
    "GGCCUAAAAG-CAUAG-UGGGAAAGUGACGUGAA-----AUUCGUCCAGAUGC---GAAAGCAUACGGU---------UAU",
]
# structure =
fc = RNA.fold_compound(ali)

# structure = '.(((((((....(((((.......)))))..))......((((((.......))))))..)))))))'
# fc.hc_add_from_db(structure, RNA.CONSTRAINT_DB_DEFAULT | RNA.CONSTRAINT_DB_ENFORCE_BP)
(propensity, ensemble_energy) = fc.pf()
basepair_probs = fc.bpp()

(ss, mfe) = fc.mfe()

bps = extract_probabilities(basepair_probs, minimum_probability, minimum_pairing_distance)
print(bps)
