{"version":3,"file":"component---src-pages-gallery-viewer-tsx-3de4b2cc15ef6fdfd048.js","mappings":"8QAiJA,MArI0BA,IAA8B,IAA7B,SAAEC,GAAqBD,EAChD,MAAME,GAAYC,EAAAA,EAAAA,OACZ,KAAEC,GAASC,EAAAA,WAAiBC,EAAAA,IAC3BC,EAASC,GAAcH,EAAAA,UAAe,IACtCI,EAASC,GAAcL,EAAAA,SAAsC,OAE7DM,EAAOC,IADyCR,SAAAA,EAAMS,MACnCR,EAAAA,SAA+B,CACvDS,QAAQ,EACRC,QAAS,cAGXV,EAAAA,WAAgB,KAEI,IAAIW,gBAAgBf,EAASgB,QACnBC,IAAI,OAQ9BN,EAAS,CACPE,QAAQ,EACRC,QAAS,kDAEb,GACC,IAiEH,OACEV,EAAAA,cAAA,OAAKc,UAAU,KACbd,EAAAA,cAAA,OAAKc,UAAU,iBAAgB,gBAC/Bd,EAAAA,cAAA,WAAK,MAEJI,GAA8B,IAAnBA,EAAQW,QAClBf,EAAAA,cAAA,OAAKc,UAAU,6CACbd,EAAAA,cAACgB,EAAAA,EAAqB,CAACF,UAAU,wBAAwB,gFAM5DZ,GACCF,EAAAA,cAAA,OAAKc,UAAU,iCACbd,EAAAA,cAAA,WACG,IACDA,EAAAA,cAACiB,EAAAA,GAAY,OACT,mBAKTX,IAAUA,EAAMG,QACfT,EAAAA,cAAA,OAAKc,UAAU,mCACZ,IACDd,EAAAA,cAACkB,EAAAA,EAAuB,CAACJ,UAAU,2BAA4B,IAC/Dd,EAAAA,cAAA,QAAMc,UAAU,kCACb,IACAR,EAAMI,SACD,IAAI,aACD,IACXV,EAAAA,cAAA,QAAMc,UAAU,aACdd,EAAAA,cAACmB,EAAAA,KAAI,CAACC,GAAG,YAAW,aAItB,EChHV,MAtBsBzB,IAA6B,IAA5B,SAAEC,EAAQ,KAAEyB,GAAW1B,EAE5C,OADA2B,QAAQC,IAAI,WAAY3B,GAEtBI,EAAAA,cAACwB,EAAAA,EAAM,CAACC,KAAMJ,EAAKK,KAAKC,aAAcC,MAAM,UAAUC,KAAM,YAC1D7B,EAAAA,cAAA,QAAM8B,MAAO,CAAEC,OAAQ,QAAUjB,UAAU,YACzCd,EAAAA,cAACgC,EAAiB,CAACpC,SAAUA,KAExB,C","sources":["webpack://AutoGen_Assistant/./src/components/views/gallery/viewer.tsx","webpack://AutoGen_Assistant/./src/pages/gallery/viewer.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { appContext } from \"../../../hooks/provider\";\nimport { fetchJSON, getServerUrl, timeAgo, truncateText } from \"../../utils\";\nimport { IGalleryItem, IStatus } from \"../../types\";\nimport { message } from \"antd\";\nimport { BounceLoader, Card } from \"../../atoms\";\nimport {\n  ExclamationTriangleIcon,\n  InformationCircleIcon,\n} from \"@heroicons/react/24/outline\";\nimport { Link, PageProps } from \"gatsby\";\n\nconst GalleryDetailView = ({ location }: PageProps) => {\n  const serverUrl = getServerUrl();\n  const { user } = React.useContext(appContext);\n  const [loading, setLoading] = React.useState(false);\n  const [gallery, setGallery] = React.useState<null | IGalleryItem[]>(null);\n  const listGalleryUrl = `${serverUrl}/gallery?user_id=${user?.email}`;\n  const [error, setError] = React.useState<IStatus | null>({\n    status: true,\n    message: \"All good\",\n  });\n\n  React.useEffect(() => {\n    // get gallery id from url\n    const urlParams = new URLSearchParams(location.search);\n    const galleryId = urlParams.get(\"id\");\n\n    if (galleryId) {\n      // Fetch gallery details using the galleryId\n      // fetchGallery(galleryId);\n    } else {\n      // Redirect to an error page or home page if the id is not found\n      // navigate(\"/\");\n      setError({\n        status: false,\n        message: \"A Gallery ID is required to view the gallery. \",\n      });\n    }\n  }, []);\n\n  const fetchGallery = () => {\n    setError(null);\n    setLoading(true);\n    // const fetch;\n    const payLoad = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const onSuccess = (data: any) => {\n      console.log(data);\n      if (data && data.status) {\n        message.success(data.message);\n        console.log(\"gallery\", data);\n        setGallery(data.data);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(listGalleryUrl, payLoad, onSuccess, onError);\n  };\n\n  const TagsView = ({ tags }: { tags: string[] }) => {\n    const tagsView = tags.map((tag: string, index: number) => {\n      return (\n        <div key={\"tag\" + index} className=\"mr-2 inline-block\">\n          <span className=\"text-xs bg-secondary border px-3 p-1 rounded\">\n            {tag}\n          </span>\n        </div>\n      );\n    });\n    return <div className=\"flex flex-wrap\">{tagsView}</div>;\n  };\n\n  // const galleryRows = gallery?.map((item: IGalleryItem, index: number) => {\n  //   return (\n  //     <div key={\"galleryrow\" + index} className=\"\">\n  //       <Card\n  //         className=\"h-full p-2 cursor-pointer\"\n  //         title={truncateText(item.messages[0].content, 20)}\n  //       >\n  //         <div className=\"my-2\">\n  //           {\" \"}\n  //           {truncateText(item.messages[0].content, 80)}\n  //         </div>\n  //         <div className=\"my-2 border-t border-dashed w-full pt-2 inline-flex gap-2 \">\n  //           <TagsView tags={item.tags} />{\" \"}\n  //         </div>\n  //         <div className=\"text-xs\">{timeAgo(item.timestamp)}</div>\n  //       </Card>\n  //     </div>\n  //   );\n  // });\n\n  return (\n    <div className=\" \">\n      <div className=\"mb-4 text-2xl\">Item Details</div>\n      <div>V </div>\n\n      {gallery && gallery.length === 0 && (\n        <div className=\"text-sm border rounded text-secondary p-2\">\n          <InformationCircleIcon className=\"h-4 w-4 inline mr-1\" />\n          No gallery items found. Please create a chat session and publish to\n          gallery.\n        </div>\n      )}\n\n      {loading && (\n        <div className=\"w-full text-center boder mt-4\">\n          <div>\n            {\" \"}\n            <BounceLoader />\n          </div>\n          loading gallery\n        </div>\n      )}\n\n      {error && !error.status && (\n        <div className=\"p-2 border rounded mt-4 text-sm\">\n          {\" \"}\n          <ExclamationTriangleIcon className=\"h-5  inline-block mr-2\" />{\" \"}\n          <span className=\" text-orange-500 inline-block \">\n            {\" \"}\n            {error.message}\n          </span>{\" \"}\n          Go back to{\" \"}\n          <span className=\"underline\">\n            <Link to=\"/gallery\">Gallery</Link>\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GalleryDetailView;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../../components/layout\";\nimport GalleryView from \"../../components/views/gallery/gallery\";\nimport GalleryDetailView from \"../../components/views/gallery/viewer\";\n\n// markup\nconst GalleryViewer = ({ location, data }: any) => {\n  console.log(\"location\", location);\n  return (\n    <Layout meta={data.site.siteMetadata} title=\"Gallery\" link={\"/gallery\"}>\n      <main style={{ height: \"100%\" }} className=\" h-full \">\n        <GalleryDetailView location={location} />\n      </main>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query HomePageQuery {\n    site {\n      siteMetadata {\n        description\n        title\n      }\n    }\n  }\n`;\n\nexport default GalleryViewer;\n"],"names":["_ref","location","serverUrl","getServerUrl","user","React","appContext","loading","setLoading","gallery","setGallery","error","setError","email","status","message","URLSearchParams","search","get","className","length","InformationCircleIcon","BounceLoader","ExclamationTriangleIcon","Link","to","data","console","log","Layout","meta","site","siteMetadata","title","link","style","height","GalleryDetailView"],"sourceRoot":""}