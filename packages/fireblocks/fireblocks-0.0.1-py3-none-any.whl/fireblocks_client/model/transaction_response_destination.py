# coding: utf-8

"""
    Fireblocks API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.6.2
    Contact: support@fireblocks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from fireblocks_client import schemas  # noqa: F401


class TransactionResponseDestination(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            destinationAddress = schemas.AnyTypeSchema
            destinationAddressDescription = schemas.AnyTypeSchema
            amount = schemas.StrSchema
            amountUSD = schemas.StrSchema
        
            @staticmethod
            def amlScreeningResult() -> typing.Type['AmlScreeningResult']:
                return AmlScreeningResult
        
            @staticmethod
            def destination() -> typing.Type['DestinationTransferPeerPathResponse']:
                return DestinationTransferPeerPathResponse
        
            @staticmethod
            def authorizationInfo() -> typing.Type['AuthorizationInfo']:
                return AuthorizationInfo
            __annotations__ = {
                "destinationAddress": destinationAddress,
                "destinationAddressDescription": destinationAddressDescription,
                "amount": amount,
                "amountUSD": amountUSD,
                "amlScreeningResult": amlScreeningResult,
                "destination": destination,
                "authorizationInfo": authorizationInfo,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["destinationAddress"]) -> MetaOapg.properties.destinationAddress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["destinationAddressDescription"]) -> MetaOapg.properties.destinationAddressDescription: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["amount"]) -> MetaOapg.properties.amount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["amountUSD"]) -> MetaOapg.properties.amountUSD: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["amlScreeningResult"]) -> 'AmlScreeningResult': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["destination"]) -> 'DestinationTransferPeerPathResponse': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authorizationInfo"]) -> 'AuthorizationInfo': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["destinationAddress", "destinationAddressDescription", "amount", "amountUSD", "amlScreeningResult", "destination", "authorizationInfo", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["destinationAddress"]) -> typing.Union[MetaOapg.properties.destinationAddress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["destinationAddressDescription"]) -> typing.Union[MetaOapg.properties.destinationAddressDescription, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["amount"]) -> typing.Union[MetaOapg.properties.amount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["amountUSD"]) -> typing.Union[MetaOapg.properties.amountUSD, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["amlScreeningResult"]) -> typing.Union['AmlScreeningResult', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["destination"]) -> typing.Union['DestinationTransferPeerPathResponse', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authorizationInfo"]) -> typing.Union['AuthorizationInfo', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["destinationAddress", "destinationAddressDescription", "amount", "amountUSD", "amlScreeningResult", "destination", "authorizationInfo", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        destinationAddress: typing.Union[MetaOapg.properties.destinationAddress, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        destinationAddressDescription: typing.Union[MetaOapg.properties.destinationAddressDescription, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        amount: typing.Union[MetaOapg.properties.amount, str, schemas.Unset] = schemas.unset,
        amountUSD: typing.Union[MetaOapg.properties.amountUSD, str, schemas.Unset] = schemas.unset,
        amlScreeningResult: typing.Union['AmlScreeningResult', schemas.Unset] = schemas.unset,
        destination: typing.Union['DestinationTransferPeerPathResponse', schemas.Unset] = schemas.unset,
        authorizationInfo: typing.Union['AuthorizationInfo', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'TransactionResponseDestination':
        return super().__new__(
            cls,
            *_args,
            destinationAddress=destinationAddress,
            destinationAddressDescription=destinationAddressDescription,
            amount=amount,
            amountUSD=amountUSD,
            amlScreeningResult=amlScreeningResult,
            destination=destination,
            authorizationInfo=authorizationInfo,
            _configuration=_configuration,
            **kwargs,
        )

from fireblocks_client.model.aml_screening_result import AmlScreeningResult
from fireblocks_client.model.authorization_info import AuthorizationInfo
from fireblocks_client.model.destination_transfer_peer_path_response import DestinationTransferPeerPathResponse
