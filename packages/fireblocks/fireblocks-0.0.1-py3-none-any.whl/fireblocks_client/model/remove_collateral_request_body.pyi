# coding: utf-8

"""
    Fireblocks API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.6.2
    Contact: support@fireblocks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from fireblocks_client import schemas  # noqa: F401


class RemoveCollateralRequestBody(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def transactionRequest() -> typing.Type['TransactionRequest']:
                return TransactionRequest
            isDstCollateral = schemas.BoolSchema
            __annotations__ = {
                "transactionRequest": transactionRequest,
                "isDstCollateral": isDstCollateral,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["transactionRequest"]) -> 'TransactionRequest': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isDstCollateral"]) -> MetaOapg.properties.isDstCollateral: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["transactionRequest", "isDstCollateral", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["transactionRequest"]) -> typing.Union['TransactionRequest', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isDstCollateral"]) -> typing.Union[MetaOapg.properties.isDstCollateral, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["transactionRequest", "isDstCollateral", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        transactionRequest: typing.Union['TransactionRequest', schemas.Unset] = schemas.unset,
        isDstCollateral: typing.Union[MetaOapg.properties.isDstCollateral, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'RemoveCollateralRequestBody':
        return super().__new__(
            cls,
            *_args,
            transactionRequest=transactionRequest,
            isDstCollateral=isDstCollateral,
            _configuration=_configuration,
            **kwargs,
        )

from fireblocks_client.model.transaction_request import TransactionRequest
