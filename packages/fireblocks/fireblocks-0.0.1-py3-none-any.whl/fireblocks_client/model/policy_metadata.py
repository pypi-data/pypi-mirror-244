# coding: utf-8

"""
    Fireblocks API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.6.2
    Contact: support@fireblocks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from fireblocks_client import schemas  # noqa: F401


class PolicyMetadata(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Policy related metadata
    """


    class MetaOapg:
        
        class properties:
            editedBy = schemas.StrSchema
            editedAt = schemas.StrSchema
            publishedBy = schemas.StrSchema
            publishedAt = schemas.StrSchema
            __annotations__ = {
                "editedBy": editedBy,
                "editedAt": editedAt,
                "publishedBy": publishedBy,
                "publishedAt": publishedAt,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["editedBy"]) -> MetaOapg.properties.editedBy: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["editedAt"]) -> MetaOapg.properties.editedAt: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["publishedBy"]) -> MetaOapg.properties.publishedBy: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["publishedAt"]) -> MetaOapg.properties.publishedAt: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["editedBy", "editedAt", "publishedBy", "publishedAt", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["editedBy"]) -> typing.Union[MetaOapg.properties.editedBy, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["editedAt"]) -> typing.Union[MetaOapg.properties.editedAt, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["publishedBy"]) -> typing.Union[MetaOapg.properties.publishedBy, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["publishedAt"]) -> typing.Union[MetaOapg.properties.publishedAt, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["editedBy", "editedAt", "publishedBy", "publishedAt", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        editedBy: typing.Union[MetaOapg.properties.editedBy, str, schemas.Unset] = schemas.unset,
        editedAt: typing.Union[MetaOapg.properties.editedAt, str, schemas.Unset] = schemas.unset,
        publishedBy: typing.Union[MetaOapg.properties.publishedBy, str, schemas.Unset] = schemas.unset,
        publishedAt: typing.Union[MetaOapg.properties.publishedAt, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PolicyMetadata':
        return super().__new__(
            cls,
            *_args,
            editedBy=editedBy,
            editedAt=editedAt,
            publishedBy=publishedBy,
            publishedAt=publishedAt,
            _configuration=_configuration,
            **kwargs,
        )
