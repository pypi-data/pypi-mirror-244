# coding: utf-8

"""
    Fireblocks API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.6.2
    Contact: support@fireblocks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from fireblocks_client import schemas  # noqa: F401


class CustomFiatRoutingDest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "scheme",
            "dstId",
            "dstType",
        }
        
        class properties:
            
            
            class scheme(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "CUSTOM": "CUSTOM",
                    }
                
                @schemas.classproperty
                def CUSTOM(cls):
                    return cls("CUSTOM")
            
            
            class dstType(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "FIAT_ACCOUNT": "FIAT_ACCOUNT",
                    }
                
                @schemas.classproperty
                def FIAT_ACCOUNT(cls):
                    return cls("FIAT_ACCOUNT")
            dstId = schemas.StrSchema
            __annotations__ = {
                "scheme": scheme,
                "dstType": dstType,
                "dstId": dstId,
            }
    
    scheme: MetaOapg.properties.scheme
    dstId: MetaOapg.properties.dstId
    dstType: MetaOapg.properties.dstType
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["scheme"]) -> MetaOapg.properties.scheme: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dstType"]) -> MetaOapg.properties.dstType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dstId"]) -> MetaOapg.properties.dstId: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["scheme", "dstType", "dstId", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["scheme"]) -> MetaOapg.properties.scheme: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dstType"]) -> MetaOapg.properties.dstType: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dstId"]) -> MetaOapg.properties.dstId: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["scheme", "dstType", "dstId", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        scheme: typing.Union[MetaOapg.properties.scheme, str, ],
        dstId: typing.Union[MetaOapg.properties.dstId, str, ],
        dstType: typing.Union[MetaOapg.properties.dstType, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CustomFiatRoutingDest':
        return super().__new__(
            cls,
            *_args,
            scheme=scheme,
            dstId=dstId,
            dstType=dstType,
            _configuration=_configuration,
            **kwargs,
        )
