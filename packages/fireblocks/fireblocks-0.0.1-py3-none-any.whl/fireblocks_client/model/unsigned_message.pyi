# coding: utf-8

"""
    Fireblocks API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.6.2
    Contact: support@fireblocks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from fireblocks_client import schemas  # noqa: F401


class UnsignedMessage(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "content",
        }
        
        class properties:
            content = schemas.StrSchema
            bip44addressIndex = schemas.IntSchema
            bip44change = schemas.NumberSchema
            
            
            class derivationPath(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.NumberSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, float, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, float, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'derivationPath':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            __annotations__ = {
                "content": content,
                "bip44addressIndex": bip44addressIndex,
                "bip44change": bip44change,
                "derivationPath": derivationPath,
            }
    
    content: MetaOapg.properties.content
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["content"]) -> MetaOapg.properties.content: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bip44addressIndex"]) -> MetaOapg.properties.bip44addressIndex: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bip44change"]) -> MetaOapg.properties.bip44change: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["derivationPath"]) -> MetaOapg.properties.derivationPath: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["content", "bip44addressIndex", "bip44change", "derivationPath", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["content"]) -> MetaOapg.properties.content: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bip44addressIndex"]) -> typing.Union[MetaOapg.properties.bip44addressIndex, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bip44change"]) -> typing.Union[MetaOapg.properties.bip44change, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["derivationPath"]) -> typing.Union[MetaOapg.properties.derivationPath, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["content", "bip44addressIndex", "bip44change", "derivationPath", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        content: typing.Union[MetaOapg.properties.content, str, ],
        bip44addressIndex: typing.Union[MetaOapg.properties.bip44addressIndex, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        bip44change: typing.Union[MetaOapg.properties.bip44change, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        derivationPath: typing.Union[MetaOapg.properties.derivationPath, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'UnsignedMessage':
        return super().__new__(
            cls,
            *_args,
            content=content,
            bip44addressIndex=bip44addressIndex,
            bip44change=bip44change,
            derivationPath=derivationPath,
            _configuration=_configuration,
            **kwargs,
        )
