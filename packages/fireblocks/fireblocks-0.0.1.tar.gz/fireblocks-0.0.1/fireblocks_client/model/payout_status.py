# coding: utf-8

"""
    Fireblocks API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.6.2
    Contact: support@fireblocks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from fireblocks_client import schemas  # noqa: F401


class PayoutStatus(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    - REQUESTED	payout requested with all its details
- VERIFIED	payout instruction set details were verified
- PROCESSING	payout instruction set executed and is processing
- FINALIZED	payout done (all payout instructions completed successfully)
- INSUFFICIENT_BALANCE	insufficient balance in the payment account (can be a temporary state)
- FAILED	one or more of the payout instructions failed

    """


    class MetaOapg:
        enum_value_to_name = {
            "REGISTERED": "REGISTERED",
            "VERIFYING": "VERIFYING",
            "IN_PROGRESS": "IN_PROGRESS",
            "DONE": "DONE",
            "INSUFFICIENT_BALANCE": "INSUFFICIENT_BALANCE",
            "FAILED": "FAILED",
        }
    
    @schemas.classproperty
    def REGISTERED(cls):
        return cls("REGISTERED")
    
    @schemas.classproperty
    def VERIFYING(cls):
        return cls("VERIFYING")
    
    @schemas.classproperty
    def IN_PROGRESS(cls):
        return cls("IN_PROGRESS")
    
    @schemas.classproperty
    def DONE(cls):
        return cls("DONE")
    
    @schemas.classproperty
    def INSUFFICIENT_BALANCE(cls):
        return cls("INSUFFICIENT_BALANCE")
    
    @schemas.classproperty
    def FAILED(cls):
        return cls("FAILED")
