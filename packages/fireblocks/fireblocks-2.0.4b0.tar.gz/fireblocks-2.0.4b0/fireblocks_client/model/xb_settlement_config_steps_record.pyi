# coding: utf-8

"""
    Fireblocks API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.6.2
    Contact: support@fireblocks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from fireblocks_client import schemas  # noqa: F401


class XBSettlementConfigStepsRecord(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def stepType() -> typing.Type['XBSettlementStepType']:
                return XBSettlementStepType
            __annotations__ = {
                "stepType": stepType,
            }
        
        
        class additional_properties(
            schemas.DictSchema
        ):
        
        
            class MetaOapg:
                required = {
                    "accountId",
                }
                
                class properties:
                    accountId = schemas.StrSchema
                
                    @staticmethod
                    def inputAssetId() -> typing.Type['XBSettlementAssetID']:
                        return XBSettlementAssetID
                
                    @staticmethod
                    def outputAssetId() -> typing.Type['XBSettlementAssetID']:
                        return XBSettlementAssetID
                    __annotations__ = {
                        "accountId": accountId,
                        "inputAssetId": inputAssetId,
                        "outputAssetId": outputAssetId,
                    }
            
            accountId: MetaOapg.properties.accountId
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["accountId"]) -> MetaOapg.properties.accountId: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["inputAssetId"]) -> 'XBSettlementAssetID': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["outputAssetId"]) -> 'XBSettlementAssetID': ...
            
            @typing.overload
            def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
            
            def __getitem__(self, name: typing.Union[typing_extensions.Literal["accountId", "inputAssetId", "outputAssetId", ], str]):
                # dict_instance[name] accessor
                return super().__getitem__(name)
            
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["accountId"]) -> MetaOapg.properties.accountId: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["inputAssetId"]) -> typing.Union['XBSettlementAssetID', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["outputAssetId"]) -> typing.Union['XBSettlementAssetID', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
            
            def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["accountId", "inputAssetId", "outputAssetId", ], str]):
                return super().get_item_oapg(name)
            
        
            def __new__(
                cls,
                *_args: typing.Union[dict, frozendict.frozendict, ],
                accountId: typing.Union[MetaOapg.properties.accountId, str, ],
                inputAssetId: typing.Union['XBSettlementAssetID', schemas.Unset] = schemas.unset,
                outputAssetId: typing.Union['XBSettlementAssetID', schemas.Unset] = schemas.unset,
                _configuration: typing.Optional[schemas.Configuration] = None,
                **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
            ) -> 'additional_properties':
                return super().__new__(
                    cls,
                    *_args,
                    accountId=accountId,
                    inputAssetId=inputAssetId,
                    outputAssetId=outputAssetId,
                    _configuration=_configuration,
                    **kwargs,
                )
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stepType"]) -> 'XBSettlementStepType': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["stepType"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stepType"]) -> typing.Union['XBSettlementStepType', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["stepType"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        stepType: typing.Union['XBSettlementStepType', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, ],
    ) -> 'XBSettlementConfigStepsRecord':
        return super().__new__(
            cls,
            *_args,
            stepType=stepType,
            _configuration=_configuration,
            **kwargs,
        )

from fireblocks_client.model.xb_settlement_asset_id import XBSettlementAssetID
from fireblocks_client.model.xb_settlement_step_type import XBSettlementStepType
