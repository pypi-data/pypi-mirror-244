# coding: utf-8

"""
    Fireblocks API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.6.2
    Contact: support@fireblocks.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from fireblocks_client import schemas  # noqa: F401


class AmountInfo(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The details of the requested amount to transfer.
    """


    class MetaOapg:
        
        class properties:
            amount = schemas.StrSchema
            requestedAmount = schemas.StrSchema
            netAmount = schemas.StrSchema
            amountUSD = schemas.StrSchema
            __annotations__ = {
                "amount": amount,
                "requestedAmount": requestedAmount,
                "netAmount": netAmount,
                "amountUSD": amountUSD,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["amount"]) -> MetaOapg.properties.amount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["requestedAmount"]) -> MetaOapg.properties.requestedAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["netAmount"]) -> MetaOapg.properties.netAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["amountUSD"]) -> MetaOapg.properties.amountUSD: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["amount", "requestedAmount", "netAmount", "amountUSD", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["amount"]) -> typing.Union[MetaOapg.properties.amount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["requestedAmount"]) -> typing.Union[MetaOapg.properties.requestedAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["netAmount"]) -> typing.Union[MetaOapg.properties.netAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["amountUSD"]) -> typing.Union[MetaOapg.properties.amountUSD, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["amount", "requestedAmount", "netAmount", "amountUSD", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        amount: typing.Union[MetaOapg.properties.amount, str, schemas.Unset] = schemas.unset,
        requestedAmount: typing.Union[MetaOapg.properties.requestedAmount, str, schemas.Unset] = schemas.unset,
        netAmount: typing.Union[MetaOapg.properties.netAmount, str, schemas.Unset] = schemas.unset,
        amountUSD: typing.Union[MetaOapg.properties.amountUSD, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'AmountInfo':
        return super().__new__(
            cls,
            *_args,
            amount=amount,
            requestedAmount=requestedAmount,
            netAmount=netAmount,
            amountUSD=amountUSD,
            _configuration=_configuration,
            **kwargs,
        )
