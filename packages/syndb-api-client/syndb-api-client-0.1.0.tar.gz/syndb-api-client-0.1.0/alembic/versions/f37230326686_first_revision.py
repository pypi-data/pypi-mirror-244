"""First revision

Revision ID: f37230326686
Revises: 
Create Date: 2023-12-02 19:20:56.104033

"""
import fastapi_users_db_sqlalchemy
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "f37230326686"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "academic_role",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("syndb_access_level", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "animal",
        sa.Column("species", sa.String(length=100), nullable=False),
        sa.Column("cultural_name", sa.String(), nullable=True),
        sa.Column(
            "created_on", sa.TIMESTAMP(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False
        ),
        sa.PrimaryKeyConstraint("species"),
    )
    op.create_index(op.f("ix_animal_cultural_name"), "animal", ["cultural_name"], unique=False)
    op.create_table(
        "brain_region",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "brain_structure",
            sa.Enum(
                "AMYGDALOID_COMPLEX",
                "ANSA_LENTICULARIS",
                "ARACHNOID_MATER",
                "ARBOR_VITAE",
                "ARCUATE_FASCICULUS",
                "ASTROCYTE",
                "AXON",
                "BASILAR_ARTERY",
                "BASONUCLEUS_AMYGDALA",
                "BERGMANN_GLIA",
                "BERNASCONI_VEIN",
                "BLOOD_BRAIN_BARRIER",
                "BLOOD_VESSELS",
                "BODY_OF_FORNIX",
                "BRACHIUM_CONJUNCTIVUM",
                "BRAIN_BARRIER_SYSTEM",
                "CA1",
                "CA2",
                "CA3",
                "CA4",
                "CALCARINE_SULCUS",
                "CALLOSAL_SULCUS",
                "CALLOSOMARGINAL_ARTERY",
                "CAUDATE",
                "CAUDATE_NUCLEUS",
                "CAVERNOSUS_SINUS",
                "CAVE_OF_RETZIUS",
                "CENTRAL_ARTERY",
                "CENTRAL_CANAL",
                "CENTRAL_LOBULE",
                "CENTRAL_NUCLEUS_AMYGDALA",
                "CEREBELLAR_ARTERY",
                "CEREBELLAR_CORTEX",
                "CEREBELLAR_NUCLEI",
                "CEREBELLAR_PEDUNCLES",
                "CEREBELLAR_PEDUNCLES_MIDDLE",
                "CEREBELLAR_VESSELS",
                "CEREBELLAR_WHITE_MATTER",
                "CEREBRAL_AQUEDUCT",
                "CEREBRAL_ARTERY",
                "CEREBRAL_ENDOTHELIAL_CELL",
                "CEREBRAL_VEIN",
                "CEREBRAL_VESSELS",
                "CEREBROSPINAL_FLUID",
                "CHOROIDAL_ARTERY",
                "CHOROID_PLEXUS",
                "CHOROID_PLEXUS_EPITHELIUM",
                "CHOROID_PLEXUS_VESSELS",
                "CINGULATE",
                "CINGULUM",
                "CIRCLE_OF_WILLIS",
                "CIRCUMFLEX_FASCICULUS",
                "COLICULUS",
                "COLSULCUS",
                "COLUMN_OF_FORNIX",
                "COMMISSURE",
                "COMMISSURE_WHITE_MATTER",
                "COMMISURE",
                "COMMUNICATING_ARTERY",
                "CORPUS_CALLOSUM_BODY",
                "CORPUS_CALLOSUM_GENU",
                "CORPUS_CALLOSUM_ROSTRUM",
                "CORPUS_CALLOSUM_SPLENIUM",
                "CORTEX",
                "CORTICAL_NUCLEUS_AMYGDALA",
                "CORTICOSPINAL_TRACT",
                "CRUCIATE_LIGAMENT",
                "CRUS_CEREBRI",
                "CRUS_OF_FORNIX",
                "CULMEN",
                "CULMEN_VERMIS",
                "CUNEUS",
                "DECLIVE",
                "DECLIVE_VERMIS",
                "DENDRITE",
                "DENTATE_GYRUS",
                "DENTATE_GYRUS_SULCUS",
                "DENTATE_NUCLEUS",
                "DG",
                "DIAGONAL_BAND_OF_BROCA",
                "DURA_MATER",
                "EMBOLIFORM_NUCLEUS",
                "ENTORHINAL_CORTEX",
                "EPENDYMAL_CELL",
                "EPENDYMOGLIA",
                "FASTIGIAL_NUCLEUS",
                "FASTIGIUM",
                "FIBROUS_ASTROCYTE",
                "FIMBRIA",
                "FISSURE_OF_SYLVIUS",
                "FLOCCULONODULAR_LOBE",
                "FLOCCULUS",
                "FOLLICULI",
                "FORAMEN_OF_MONRO",
                "FORCEPS_MAJOR",
                "FORCEPS_MINOR",
                "FOURTH_VENTRICLE",
                "FRONTAL_ASYLUM",
                "FRONTAL_GYRUS",
                "FRONTAL_SULCUS",
                "FRONTOPOLAR_ARTERY",
                "FUNICULUSIS",
                "GENICULATE_NUCLEUS",
                "GLOBOSE_NUCLEUS",
                "GLOBUS_PALLIDUS",
                "HABENULAR_COMMISURE",
                "HIPPOCAMPAL_SULCUS",
                "HIPPOCAMPUS",
                "HYPOTHALAMIC_COMMISSURE",
                "HYPOTHALAMIC_COMMISURE",
                "INDUSEUM_GRISIUM",
                "INFUNDIBULUM",
                "INSULAR_ASYLUM",
                "INTERCALATED_NUCLEUS_AMYGDALA",
                "INTERIOR_CEREBRAL_VEIN",
                "INTERNAL_CAPSULE_GENU",
                "INTERNAL_CAPSULE_LIMB",
                "INTERNAL_CAROTID_ARTERY",
                "INTERPEDUNCULAR_FOSSA",
                "INTERPOSITUS_NUCLEUS",
                "INTERVENTRICULAR_FORAMEN",
                "INTRALAMINAR_NUCLEUS_THALAMUS",
                "LAMINA_TERMINALIS",
                "LATERONUCLEUS",
                "LEMNISCUS",
                "LENTICULAR_FASCICULUS",
                "LENTICULOSTRIATE_ARTERIES",
                "LINGUAL_GYRUS",
                "LINGUAL_SULCUS",
                "LOBE",
                "LONGITUDINAL_FASCICULUS",
                "LUSHKA_FORAMEN",
                "MAGENDIE_FORAMEN",
                "MAMMILLARY_BODY",
                "MAMMILLARY_RECESS",
                "MASSA_INTERMEDIA",
                "MEDULLARY_RETICULOSPINAL_TRACT",
                "MEDULLARY_VELUM",
                "MENINGEAL_VESSELS",
                "MENINGES",
                "MICROGLIA",
                "MIDDLE_CEREBRAL_ARTERY",
                "MIDDLE_CEREBRAL_VEIN",
                "MIDDLE_TEMPORAL_GYRUS",
                "MIDLINE_NUCLEUS_THALAMUS",
                "MUELLER_CELL",
                "MYELIN",
                "NEUROFILAMENT",
                "NEUROGLIA",
                "NEURON",
                "NEUROPIL",
                "NISSIL_BODY",
                "NODE_OF_RANVIER",
                "NODULUS",
                "NUCLEUS",
                "NUCLEUS_AMYGDALA",
                "NUCLEUS_THALAMUS",
                "NUCLUES_ACCUMBENS",
                "OCCIPITAL_ASYLUM",
                "OCCIPITAL_GYRUS",
                "OCCIPITAL_SINUS",
                "OCCIPITAL_SULCUS",
                "OCCIPITOTEMPORAL_GYRUS",
                "OCCIPITOTEMPORAL_SULCUS",
                "OLFACTORY_SULCUS",
                "OLFACTORY_TRIGONE",
                "OLIGODENDROCYTE",
                "OLIVARY_COMPLEX",
                "OLIVOSPINAL_TRACT",
                "OPHTHALMIC_ARTERY",
                "OPTIC_CHIASM",
                "OPTIC_NERVE",
                "OPTIC_RECESS",
                "ORBIFRONTAL_GYRUS",
                "ORBITOFRONTAL_ARTERY",
                "ORBITOFRONTAL_CORTEX",
                "PARACENTRAL_LOBULE",
                "PARAFLOCCULUS",
                "PARAHIPPOCAMPAL_GYRUS",
                "PARAVENTRICULAR_NUCLEUS_THALAMUS",
                "PARENCHYMAL_FEET",
                "PARIETAL_ASYLUM",
                "PARIETAL_BONE",
                "PARIETAL_GYRUS",
                "PARIETAL_LOBE",
                "PARIETAL_LOBULE",
                "PARIETAL_OPERCULUM",
                "PARIETO_OCCIPITAL_ARTERY",
                "PARIETO_OCCIPITAL_NOTCH",
                "PARIETO_OCCIPITAL_SULCUS",
                "PARS_OPERCULARIS",
                "PARS_ORBITALIS",
                "PARS_TRIANGULARIS",
                "PEDUNCULOPONTINE_NUCLEUS",
                "PERFORATED_SUBSTANCE",
                "PERICALLOSAL_ARTERY",
                "PERIRHINAL_CORTEX",
                "PETROSAL_SINUS",
                "PIASTROCYTE",
                "PIA_MATER",
                "PINEALOCYTE",
                "PINEAL_GYRUS",
                "PINEAL_RECESS",
                "PITUICYTE",
                "PITUITARY_GYRUS",
                "PONS",
                "PONTINE_FIBERS",
                "PONTINE_RETICULOSPINAL_TRACT",
                "POSTCENTRAL_ARTERY",
                "POSTCENTRAL_GYRUS",
                "PRECENTRAL_ARTERY",
                "PRECENTRAL_GYRUS",
                "PRECENTRAL_SULCUS",
                "PRECUNEUS",
                "PREMOTOR_CORTEX",
                "PREOPTIC_AREA",
                "PREPYRIFORM_AREA",
                "PRESUBICULUM",
                "PRIMARY_AUDITORY_CORTEX",
                "PRIMARY_FISSURE",
                "PRIMARY_MOTOR_CORTEX",
                "PRIMARY_SENSORY_CORTEX",
                "PRIMARY_SOMATOSENSORY_CORTEX",
                "PRIMARY_VISUAL_CORTEX",
                "PRIMAR_VISUAL_CORTEX",
                "PROSUBICULUM",
                "PROTOPLASMIC_ASTROCYTE",
                "PULVINAR",
                "PULVINAR_NUCLEUS",
                "PUTAMEN",
                "PYRAMIDAL_CELL",
                "PYRAMIDAL_TRACT",
                "PYRAMIS",
                "PYRAMIS_VERMIS",
                "RADIAL_GLIA",
                "RECESS",
                "RECURRENT_ARTERY_OF_HEBERDEN",
                "RED_NUCLEUS",
                "RETICULAR_FORMATION",
                "RETICULAR_NUCLEUS",
                "RETICULAR_NUCLEUS_THALAMUS",
                "RETROLENFICULAR_PART",
                "RETROSPLENIAL_CORTEX",
                "RHINAL_SULCUS",
                "RHOMBIC_LIP",
                "ROSSENTHAL_VEIN",
                "RUBROSPINAL_TRACT",
                "SAGITTAL_SINUS",
                "SATELLITE_CELL",
                "SCHWANN_CELL",
                "SECONDARY_AUDITORY_CORTEX",
                "SECONDARY_SOMATOSENSORY_CORTEX",
                "SECONDARY_VISUAL_CORTEX",
                "SEPTAL_NUCLEUS",
                "SEPTUM",
                "SEPTUM_PELLUCIDUM",
                "SEPTUM_VERUM",
                "SHORT_CINGULATE_GYRUS",
                "SHORT_INSULAR_GYRUS",
                "SIGMOID_SINUS",
                "SILVIAN_FISSURE",
                "SIMPLE_LOBULE",
                "SINGULATE",
                "SINGULATE_GYRUS",
                "SINGULATE_SULCUS",
                "SPINAL_ARTERIES",
                "SPINAL_ARTERY",
                "SPINAL_CORD_GRAY_MATTER",
                "SPINAL_CORD_WHITE_MATTER",
                "SPINO_THALAMIC_TRACT",
                "SPLEDIUM",
                "STRAIGHT_GYRUS",
                "STRAIGHT_SINUS",
                "STRATIUM",
                "STRIATE_ARTERIES",
                "STRIATE_CORTEX",
                "STRIATUM",
                "STRIA_MEDULLARIS",
                "STRIA_TERMINALIS",
                "STS",
                "SUBCALLOSAL_AREA",
                "SUBCALLOSAL_GYRUS",
                "SUBCALOSSAL_STRIA",
                "SUBCOMMISSURAL_ORGAN",
                "SUBICULUM",
                "SUBSTANTIA_INNOMINATA",
                "SUBSTANTIA_NIGRA",
                "SUBTHALAMIC_NUCLEUS",
                "SULCUS",
                "SUPRACHIASMATIC_NUCLEUS",
                "SUPRACHIASMATIC_RECESS",
                "SUPRAMAMILLARY_NUCLEUS",
                "SUPRAMARGINAL_GYRUS",
                "SUPRAOPTIC_COMMISSURE",
                "SUPRARHINAL_GYRUS",
                "SYNAPSE",
                "TAENIA_FORNIX",
                "TAENIA_SEPTI_PELLUCIDI",
                "TAENIA_THALAMI",
                "TAIL_OF_CAUDATE_NUCLEUS",
                "TANICYTES",
                "TANIGLIA",
                "TAPETUM",
                "TECTAL_COMMISSURE",
                "TECTOSPINAL_TRACT",
                "TEGMENTAL_AREA",
                "TELA_CHOROIDEA",
                "TEMPORAL_ARTERIES",
                "TEMPORAL_ARTERIES_MIDDLE",
                "TEMPORAL_ASYLUM",
                "TEMPORAL_BONE",
                "TEMPORAL_CORTEX",
                "TEMPORAL_GYRUS",
                "TEMPORAL_LOBE",
                "TEMPORAL_POLE",
                "TEMPORAL_STEM",
                "TEMPORAL_SULCUS",
                "THALAMIC_FASCICULUS",
                "THALAMUS",
                "THIRD_VENTRICLE",
                "THLAMUS",
                "TONSIL",
                "TORCULAR_HEROPHILI",
                "TRANSVERSE_SINUS",
                "TRAPEZOID_BODY",
                "TRIGEMINAL_NERVE",
                "TROCHLEAR_NERVE",
                "TUBER",
                "TUBEROMAMILLARY_NUCLEUS",
                "TUBER_CINEREUM",
                "TUBER_VERMIS",
                "UNCINATE_FASCICULUS",
                "UNCINATE_GYRUS",
                "UNDUSE_ORIS",
                "UPITUITARY",
                "UVULA",
                "UVULA_VERMIS",
                "VAGUS_NERVE",
                "VEIN_OF_GALEN",
                "VEIN_OF_LABBE",
                "VEIN_OF_SEPTUM_PELLUCIDUM",
                "VEIN_OF_TROLARD",
                "VENTRICLE",
                "VENTRICULAR_EPITHELIUM",
                "VENTRICULAR_SYSTEM",
                "VENTRONUCLEUS",
                "VERMIS",
                "VERTEBRAL_ARTERY",
                "VERTICAL_GYRUS",
                "VESTIBULOCEREBELLUM",
                "VESTIBULOSPINAL_TRACT",
                "VISUAL_ASSOCIATION_CORTEX",
                "VISUAL_CORTEX",
                "VPL_NUCLEUS",
                "WHITE_MATTER",
                "WING_OF_CENTRAL_LOBULE",
                "ZAHN_ARTERIES",
                "ZONA_INCERTA",
                name="brainstructure",
            ),
            nullable=False,
        ),
        sa.Column(
            "direction",
            sa.Enum(
                "ANTERIOR",
                "ANTERIOR_DORSAL",
                "ANTERIOR_VENTRAL",
                "CAUDAL",
                "DISTAL",
                "DISTAL_CAUDAL",
                "DISTAL_ROSTRAL",
                "DORSAL",
                "DORSAL_LATERAL",
                "DORSAL_MEDIAL",
                "INFERIOR",
                "INFERIOR_DISTAL",
                "INFERIOR_PROXIMAL",
                "LATERAL",
                "LATERAL_INFERIOR",
                "LATERAL_SUPERIOR",
                "MEDIAL",
                "MEDIAL_INFERIOR",
                "MEDIAL_SUPERIOR",
                "POSTERIOR",
                "POSTERIOR_DORSAL",
                "POSTERIOR_VENTRAL",
                "PROXIMAL",
                "PROXIMAL_CAUDAL",
                "PROXIMAL_ROSTRAL",
                "ROSTRAL",
                "SUPERIOR",
                "SUPERIOR_DISTAL",
                "SUPERIOR_PROXIMAL",
                "VENTRAL",
                "VENTRAL_LATERAL",
                "VENTRAL_MEDIAL",
                "NULL",
                name="neuroanatomicaldirection",
            ),
            nullable=False,
        ),
        sa.Column(
            "created_on", sa.TIMESTAMP(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("brain_structure", "direction", name="Brain regions are unique"),
    )
    op.create_table(
        "microscopy",
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column(
            "created_on", sa.TIMESTAMP(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False
        ),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "mutation",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("gene", sa.String(length=100), nullable=False),
        sa.Column(
            "expression",
            sa.Enum("KNOCK_OUT", "KNOCK_IN", "KNOCK_DOWN", "KNOCK_SIDEWAYS", "OVEREXPRESSION", name="geneexpression"),
            nullable=False,
        ),
        sa.Column(
            "created_on", sa.TIMESTAMP(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("gene", "expression", name="single_instance_of_gene_type"),
    )
    op.create_index(op.f("ix_mutation_expression"), "mutation", ["expression"], unique=False)
    op.create_index(op.f("ix_mutation_gene"), "mutation", ["gene"], unique=False)
    op.create_table(
        "publication",
        sa.Column("doi", sa.String(), nullable=False),
        sa.Column(
            "created_on", sa.TIMESTAMP(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False
        ),
        sa.PrimaryKeyConstraint("doi"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("scientist_tag", sa.String(), nullable=True),
        sa.Column("has_profile_picture", sa.Boolean(), nullable=False),
        sa.Column("total_uploaded_units", sa.Integer(), nullable=False),
        sa.Column("excommunicated", sa.Boolean(), nullable=False),
        sa.Column(
            "created_on", sa.TIMESTAMP(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False
        ),
        sa.Column(
            "updated_on", sa.TIMESTAMP(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False
        ),
        sa.Column("has_academic", sa.Boolean(), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("hashed_password", sa.String(length=1024), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix_user_scientist_tag"), "user", ["scientist_tag"], unique=True)
    op.create_table(
        "academic_account",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("institution", sa.String(length=150), nullable=False),
        sa.Column("role_name", sa.String(length=100), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_name"],
            ["academic_role.name"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_academic_account_institution"), "academic_account", ["institution"], unique=False)
    op.create_table(
        "accesstoken",
        sa.Column("user_id", fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
        sa.Column("token", sa.String(length=43), nullable=False),
        sa.Column("created_at", fastapi_users_db_sqlalchemy.generics.TIMESTAMPAware(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="cascade"),
        sa.PrimaryKeyConstraint("token"),
    )
    op.create_index(op.f("ix_accesstoken_created_at"), "accesstoken", ["created_at"], unique=False)
    op.create_table(
        "animal_mutation_association_table",
        sa.Column("animal_species", sa.String(length=100), nullable=False),
        sa.Column("mutation_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(["animal_species"], ["animal.species"], ondelete="restrict"),
        sa.ForeignKeyConstraint(
            ["mutation_id"],
            ["mutation.id"],
        ),
        sa.PrimaryKeyConstraint("animal_species"),
    )
    op.create_table(
        "dataset",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("label", sa.String(length=120), nullable=True),
        sa.Column("upload_complete", sa.Boolean(), nullable=False),
        sa.Column("number_of_units", sa.Integer(), nullable=False),
        sa.Column(
            "syndb_tables",
            postgresql.ARRAY(
                sa.Enum(
                    "NEURON",
                    "DENDRITE",
                    "AXON",
                    "PRE_SYNAPTIC_TERMINAL",
                    "DENDRITIC_SPINE",
                    "ENDOPLASMIC_RETICULUM",
                    "NUCLEUS",
                    "VESICLE",
                    "MITOCHONDRIA",
                    name="syndbtable",
                ),
                dimensions=1,
            ),
            nullable=False,
        ),
        sa.Column("microscopy_name", sa.String(length=200), nullable=False),
        sa.Column("animal_species", sa.String(length=100), nullable=False),
        sa.Column("brain_region_id", sa.Uuid(), nullable=False),
        sa.Column("notes", sa.String(length=280), nullable=True),
        sa.Column(
            "updated_on", sa.TIMESTAMP(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False
        ),
        sa.Column("owner_id", sa.Uuid(), nullable=False),
        sa.Column(
            "created_on", sa.TIMESTAMP(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["animal_species"],
            ["animal.species"],
        ),
        sa.ForeignKeyConstraint(["brain_region_id"], ["brain_region.id"], ondelete="restrict"),
        sa.ForeignKeyConstraint(
            ["microscopy_name"],
            ["microscopy.name"],
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_dataset_animal_species"), "dataset", ["animal_species"], unique=False)
    op.create_index(op.f("ix_dataset_brain_region_id"), "dataset", ["brain_region_id"], unique=False)
    op.create_index(op.f("ix_dataset_microscopy_name"), "dataset", ["microscopy_name"], unique=False)
    op.create_index(op.f("ix_dataset_owner_id"), "dataset", ["owner_id"], unique=False)
    op.create_index(op.f("ix_dataset_syndb_tables"), "dataset", ["syndb_tables"], unique=False)
    op.create_table(
        "dataset_collection",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("notes", sa.String(length=280), nullable=True),
        sa.Column(
            "updated_on", sa.TIMESTAMP(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False
        ),
        sa.Column("owner_id", sa.Uuid(), nullable=False),
        sa.Column(
            "created_on", sa.TIMESTAMP(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_index(op.f("ix_dataset_collection_owner_id"), "dataset_collection", ["owner_id"], unique=False)
    op.create_table(
        "oauth_account",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
        sa.Column("oauth_name", sa.String(length=100), nullable=False),
        sa.Column("access_token", sa.String(length=1024), nullable=False),
        sa.Column("expires_at", sa.Integer(), nullable=True),
        sa.Column("refresh_token", sa.String(length=1024), nullable=True),
        sa.Column("account_id", sa.String(length=320), nullable=False),
        sa.Column("account_email", sa.String(length=320), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="cascade"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_oauth_account_account_id"), "oauth_account", ["account_id"], unique=False)
    op.create_index(op.f("ix_oauth_account_oauth_name"), "oauth_account", ["oauth_name"], unique=False)
    op.create_table(
        "owner_group",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("admin_id", sa.Uuid(), nullable=False),
        sa.Column("institution", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["admin_id"], ["user.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "user_publication_association_table",
        sa.Column("doi", sa.String(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["doi"],
            ["publication.doi"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("doi"),
    )
    op.create_table(
        "dataset_collection_group_association_table",
        sa.Column("dataset_collection_name", sa.String(), nullable=False),
        sa.Column("group_name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dataset_collection_name"],
            ["dataset_collection.name"],
        ),
        sa.ForeignKeyConstraint(
            ["group_name"],
            ["owner_group.name"],
        ),
        sa.PrimaryKeyConstraint("dataset_collection_name", "group_name"),
    )
    op.create_table(
        "dataset_dataset_collection_association_table",
        sa.Column("dataset_id", sa.Uuid(), nullable=True),
        sa.Column("dataset_collection_name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dataset_collection_name"],
            ["dataset_collection.name"],
        ),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["dataset.id"],
        ),
        sa.PrimaryKeyConstraint("dataset_collection_name"),
    )
    op.create_table(
        "dataset_group_association_table",
        sa.Column("group_name", sa.String(), nullable=False),
        sa.Column("dataset_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["dataset.id"],
        ),
        sa.ForeignKeyConstraint(
            ["group_name"],
            ["owner_group.name"],
        ),
        sa.PrimaryKeyConstraint("group_name"),
    )
    op.create_table(
        "dataset_mutation_association_table",
        sa.Column("dataset_id", sa.Uuid(), nullable=True),
        sa.Column("mutation_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["dataset.id"],
        ),
        sa.ForeignKeyConstraint(["mutation_id"], ["mutation.id"], ondelete="restrict"),
    )
    op.create_table(
        "dataset_publication_association_table",
        sa.Column("publication_doi", sa.String(), nullable=False),
        sa.Column("dataset_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["dataset.id"],
        ),
        sa.ForeignKeyConstraint(["publication_doi"], ["publication.doi"], ondelete="restrict"),
        sa.PrimaryKeyConstraint("publication_doi"),
    )
    op.create_table(
        "user_group_association_table",
        sa.Column("group_name", sa.String(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("is_executive", sa.Boolean(), nullable=False),
        sa.Column("is_moderator", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_name"],
            ["owner_group.name"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("group_name", "user_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_group_association_table")
    op.drop_table("dataset_publication_association_table")
    op.drop_table("dataset_mutation_association_table")
    op.drop_table("dataset_group_association_table")
    op.drop_table("dataset_dataset_collection_association_table")
    op.drop_table("dataset_collection_group_association_table")
    op.drop_table("user_publication_association_table")
    op.drop_table("owner_group")
    op.drop_index(op.f("ix_oauth_account_oauth_name"), table_name="oauth_account")
    op.drop_index(op.f("ix_oauth_account_account_id"), table_name="oauth_account")
    op.drop_table("oauth_account")
    op.drop_index(op.f("ix_dataset_collection_owner_id"), table_name="dataset_collection")
    op.drop_table("dataset_collection")
    op.drop_index(op.f("ix_dataset_syndb_tables"), table_name="dataset")
    op.drop_index(op.f("ix_dataset_owner_id"), table_name="dataset")
    op.drop_index(op.f("ix_dataset_microscopy_name"), table_name="dataset")
    op.drop_index(op.f("ix_dataset_brain_region_id"), table_name="dataset")
    op.drop_index(op.f("ix_dataset_animal_species"), table_name="dataset")
    op.drop_table("dataset")
    op.drop_table("animal_mutation_association_table")
    op.drop_index(op.f("ix_accesstoken_created_at"), table_name="accesstoken")
    op.drop_table("accesstoken")
    op.drop_index(op.f("ix_academic_account_institution"), table_name="academic_account")
    op.drop_table("academic_account")
    op.drop_index(op.f("ix_user_scientist_tag"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_table("publication")
    op.drop_index(op.f("ix_mutation_gene"), table_name="mutation")
    op.drop_index(op.f("ix_mutation_expression"), table_name="mutation")
    op.drop_table("mutation")
    op.drop_table("microscopy")
    op.drop_table("brain_region")
    op.drop_index(op.f("ix_animal_cultural_name"), table_name="animal")
    op.drop_table("animal")
    op.drop_table("academic_role")
    # ### end Alembic commands ###
