# This file was auto-generated by Fern from our API Definition.

import typing

import httpx

from ..environment import CohereAWSEnvironment


class BaseClientWrapper:
    def __init__(self, *, environment: CohereAWSEnvironment, headers: typing.Dict[str, str]):
        self._environment = environment
        self._headers = headers

    def get_headers(self) -> typing.Dict[str, str]:
        headers: typing.Dict[str, str] = {
            "X-Fern-Language": "Python",
            "X-Fern-SDK-Name": "fern-cohere-aws",
            "X-Fern-SDK-Version": "0.0.3",
            **self._headers,
        }
        return headers

    def get_environment(self) -> CohereAWSEnvironment:
        return self._environment


class SyncClientWrapper(BaseClientWrapper):
    def __init__(self, *, environment: CohereAWSEnvironment, httpx_client: httpx.Client, headers: typing.Dict[str, str]):
        super().__init__(environment=environment, headers=headers)
        self.httpx_client = httpx_client


class AsyncClientWrapper(BaseClientWrapper):
    def __init__(self, *, environment: CohereAWSEnvironment, httpx_client: httpx.AsyncClient, headers: typing.Dict[str, str]):
        super().__init__(environment=environment, headers=headers)
        self.httpx_client = httpx_client
