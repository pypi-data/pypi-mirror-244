[tool.poetry]
name = "beets-filetote"
version = "0.4.5"
description = "A beets plugin to copy/moves non-music extra files, attachments, and artifacts during the import process."
authors = ["Gavin Tronset <gtronset@gmail.com>"]
keywords = ["beets", "files", "artifacts", "extra"]
license = "MIT"
readme = "README.md"
packages = [{include = "beetsplug"}]
repository = "https://github.com/gtronset/beets-filetote"
documentation = "https://github.com/gtronset/beets-filetote"
classifiers = [
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Multimedia :: Sound/Audio :: Players :: MP3",
    "Environment :: Console",
    "Environment :: Web Environment"
]

[tool.poetry.urls]
"Release notes" = "https://github.com/gtronset/beets-filetote/releases"
"Source" = "https://github.com/gtronset/beets-filetote"

[tool.poetry.dependencies]
python = "^3.6"
beets = "^1.6.0"
mediafile = "0.10.0"
dataclasses = { version = "^0.8", python = ">=3.6, <3.7" }
typing_extensions = [
    { version = "^4.4.0", python = ">=3.7, <3.8" },
    { version = "^4.1.1", python = "<3.7" }
]

[tool.poetry.group.dev.dependencies]
black =  { version = ">=22.12,<24.0", python = ">=3.7,<4.0" }
flake8 = { version = "^6.0.0", python = ">=3.8.1,<4.0" }
flake8-bugbear =  { version = "^23.1.20", python = ">=3.7,<4.0" }
flake8-pyi =  [
    { version = "^23.11.0", python = ">=3.8,<4.0" },
    { version = "23.5.0", python = ">=3.7,<3.8" },
    { version = "20.10.0", python = ">=3.6,<3.7" }
]
isort = [
    { version = "^5.12.0", python = ">=3.8" },
    { version = "5.11.5", python = ">=3.7.0,<3.8" },
    { version = "5.10.1", python = ">=3.6.1,<3.7" }
]
pylint = { version = "^2.15.9", python = "^3.7.2" }
pytest = { version = "^7.1.3", python = "^3.7" }
mock = "^5.0.0"
mypy = [
    { version = "^1.7.1", python = ">=3.8" },
    { version = ">=0.991,<1.5", python = ">=3.7, <3.8" }
]
reflink = "^0.2.1"
toml = "^0.10.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ['py36']
preview = true
line-length = 88

[tool.isort]
profile = 'black'

[tool.pytest.ini_options]
testpaths = ["./tests"]
filterwarnings = [
    "ignore::DeprecationWarning:.*confuse",
    "ignore::DeprecationWarning:.*mediafile"
]

[tool.pylint.format]
disable = ''
max-line-length = '88'
output-format = 'colorized'

[tool.mypy]
mypy_path = ["./typehints"]
strict=true
pretty=true
