Metadata-Version: 2.1
Name: aiohttp-admin
Version: 0.1.0a3
Summary: admin interface for aiohttp application
Home-page: https://github.com/aio-libs/aiohttp-admin
Download-URL: https://github.com/aio-libs/aiohttp-admin
License: Apache 2
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Development Status :: 3 - Alpha
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Framework :: AsyncIO
Classifier: Framework :: aiohttp
License-File: LICENSE
Requires-Dist: aiohttp >=3.9
Requires-Dist: aiohttp-security
Requires-Dist: aiohttp-session
Requires-Dist: cryptography
Requires-Dist: pydantic <3,>2
Requires-Dist: typing-extensions >=3.10 ; python_version < "3.12"
Provides-Extra: sa
Requires-Dist: sqlalchemy <3,>=2.0.4 ; extra == 'sa'

aiohttp-admin
=============
.. image:: https://codecov.io/gh/aio-libs/aiohttp-admin/branch/master/graph/badge.svg
    :target: https://codecov.io/gh/aio-libs/aiohttp-admin

**aiohttp-admin** allows you to create a admin interface in minutes. It is designed to
be flexible and database agnostic.

It has built-in support for SQLAlchemy, allowing admin views to be created automatically
from DB models (ORM or core).

To see how to use the 0.1 versions, please refer to the examples. Documentation will be updated at a later date.

Development
-----------

To develop or build the project from source, you'll need to build the admin JS file::

    cd admin-js/
    yarn install
    yarn build

After that, it can be treated as any other Python project.


=======
CHANGES
=======

.. towncrier release notes start

0.1.0a3 (2023-12-03)
====================

- Used ``AppKey`` with aiohttp 3.9.
- Added Python 3.12 support.
- Added support for dynamically loaded components.
- Reverted a change which broke relationship fields.

0.1.0a2 (2023-10-02)
====================

- Added ``permission_for()`` to create sqlalchemy permissions programatically.
- Added ``field_props`` and ``input_props`` to the schema to pass extra props to components.
- Added support for more relationships (one-to-many, many-to-one etc.).
- Added a ``js_module`` option to include custom functions.
- Added ``comp()``, ``func()`` and ``regex()``.
- Added ``show_actions`` to allow customising the show actions.
- Set many additional props/validators from inspecting the SqlAlchemy models.
- Migrated to Pydantic v2.
- Fixed behaviour with dates and times.
- Various minor improvements.

0.1.0a1 (2023-04-23)
====================

- Removed ``auth_policy`` parameter from ``setup()``, this is no longer needed.
- Added a default ``identity_callback`` for simple applications, so it is no longer a required schema item.
- Added ``Permissions.all`` enum value (which should replace ``tuple(Permissions)``).
- Added validators to inputs (e.g. required, minValue etc. See examples/validators.py).
- Added extensive permission controls (see examples/permissions.py).
- Added ``admin["permission_re"]`` regex object to test if permission strings are valid.
- Added buttons for the user to change visible columns in the list view.
- Added initial support for ORM (1-to-many) relationships.
- Added option to add simple bulk update buttons.
- Added option to customise resource icons in sidebar.
- Added option to customise admin title and resource labels.
- Added support for non-id primary keys.
- Added default favicon.
- Included JS map file.
- Fixed autocomplete behaviour in reference inputs (e.g. for foreign keys).
- Fixed handling of date/datetime inputs.

0.1.0a0 (2023-02-27)
====================

- Migrated to react-admin and completely reinvented the API.
