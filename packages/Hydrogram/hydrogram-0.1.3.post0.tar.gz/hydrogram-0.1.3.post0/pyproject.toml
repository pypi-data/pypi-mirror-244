[project]
name = "Hydrogram"
dynamic = ["version"]
description = "Sleek, advanced, and asynchronous Telegram MTProto API framework in Python, designed for fluid user and bot interactions."
authors = [{ name = "Amano LLC", email = "contact@amanoteam.com" }]
dependencies = [
    "pyaes==1.6.1",
    "pysocks==1.7.1",
    "aiosqlite>=0.19.0",
]
readme = "README.md"
license = "LGPL-3.0-or-later"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Internet",
    "Topic :: Communications",
    "Topic :: Communications :: Chat",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
keywords = ["telegram chat messenger mtproto api client library python"]

[tool.hatch.version]
path = "hydrogram/__init__.py"

# Used to call hatch_build.py
[tool.hatch.build.hooks.custom]

[project.urls]
Tracker = "https://github.com/AmanoTeam/Hydrogram/issues"
Community = "https://t.me/HydrogramNews"
Source = "https://github.com/AmanoTeam/Hydrogram"
Documentation = "https://hydrogram.amanoteam.com"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "ruff>=0.1.3",
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "twine>=4.0.2",
]

[project.optional-dependencies]
docs = [
    "Sphinx>=7.2.6",
    "furo>=2023.9.10",
    "sphinx-autobuild>=2021.3.14",
    "sphinx-copybutton>=0.5.2",
    "pygments>=2.16.1",
    "towncrier>=23.6.0",
    "sphinxcontrib-towncrier>=0.3.2a0",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [
    ".github/",
    "docs/",
    "news/",
    "tests/",
    ".editorconfig",
    ".gitignore",
    ".pre-commit-config.yaml",
    "CODE_OF_CONDUCT.rst",
    "CONTRIBUTING.rst",
    "NEWS.rst",
    "requirements.lock",
    "requirements-dev.lock",
]

[tool.hatch.build.targets.wheel]
ignore-vcs = true
package = "hydrogram"

[tool.ruff]
line-length = 99
target-version = "py38"
select = [
    "I",    # isort
    "E",    # pycodestyle
    "W",    # pycodestyle
    "UP",   # pyupgrade
    "F",    # pyflakes
    "SIM",  # flake8-simplify
    "RET",  # flake8-return
    "C4",   # flake8-comprehensions
    "PTH",  # flake8-use-pathlib
    "PERF", # perflint
    "N",    # pep8-naming
    "RUF",  # ruff
    "G",    # flake8-logging-format
    "TID",  # flake8-tidy-imports
]
ignore = ["RUF001", "RUF002", "RUF003", "E203", "PERF203"]
preview = true

[tool.ruff.isort]
known-first-party = ["hydrogram"]

[tool.towncrier]
package = "hydrogram"
filename = "NEWS.rst"
directory = "news/"
template = "news/.template.rst.jinja2"
issue_format = "`#{issue} <https://github.com/AmanoTeam/hydrogram/issues/{issue}>`_"

[[tool.towncrier.section]]
path = ""

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Improved Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "removal"
name = "Deprecations and Removals"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "Misc"
showcontent = true
