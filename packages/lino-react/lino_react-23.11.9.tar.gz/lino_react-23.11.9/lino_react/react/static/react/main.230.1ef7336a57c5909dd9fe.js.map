{"version":3,"file":"main.230.1ef7336a57c5909dd9fe.js","mappings":"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","sources":["webpack://lino_react/./lino_react/react/components/LinoComponentUtils.jsx"],"sourcesContent":["export const name = \"LinoComponentUtils\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { RegisterImportPool, getExReady, Component, DataContextType } from \"./Base\";\n\nimport * as constants from \"./constants\";\n\n\nlet ex; const exModulePromises = ex = {\n    classNames: import(/* webpackChunkName: \"classNames_LinoComponentUtils\" */\"classnames\"),\n    queryString: import(/* webpackChunkName: \"queryString_LinoComponentUtils\" */\"query-string\"),\n    prDropdown: import(/* webpackChunkName: \"prDropdown_LinoComponentUtils\" */\"primereact/dropdown\"),\n    prInputText: import(/* webpackChunkName: \"prInputText_LinoComponentUtils\" */\"primereact/inputtext\"),\n}\nRegisterImportPool(ex);\n\n\nfunction setInputFocus(elem) {\n    if (!elem.props.setFocus || !elem.inputEl) return;\n    if (elem.inputEl.focus) elem.inputEl.focus()\n    else if (elem.inputEl.focusInput) elem.inputEl.focusInput.focus()\n    else if (elem.inputEl.inputRef) elem.inputEl.inputRef.current.focus()\n    else {\n        setTimeout(() => {\n            if (elem.inputEl) {\n                if (elem.inputEl.quill) elem.inputEl.quill.focus();\n            }\n        }, 200);\n    }\n}\n\nfunction setFocusOut(elem, func) {\n    if (!elem.hasOwnProperty('inputEl')) return\n    if (elem.inputEl.focus) elem.inputEl.addEventListener('focusout', e => func(e, elem))\n    else if (elem.inputEl.focusInput) elem.inputEl.focusInput.addEventListener('focusout', e => func(e, elem))\n    else if (elem.inputEl.inputRef) elem.inputEl.inputRef.current.addEventListener('focusout', e => func(e, elem))\n    else {\n        setTimeout(() => {\n            if (elem.inputEl) {\n                if (elem.inputEl.quill) elem.inputEl.quill.addEventListener('focusout', e => func(e, elem));\n            }\n        }, 200);\n    }\n}\n\nfunction messageInterceptor(elem) {\n    return (event) => {\n        if (event.data.hasOwnProperty('master_data')) {\n            if (elem.props[constants.URL_PARAM_WINDOW_TYPE] !== constants.WINDOW_TYPE_TABLE && Object.keys(event.data.master_data).includes(elem.props.elem.name)) {\n                elem.setState({value : event.data.master_data[elem.props.elem.name]});\n            }\n        }\n    }\n}\n\nexport function maintainTableWidth(elem, count) {\n    let ctx;\n    if (elem !== undefined) ctx = elem\n    else ctx = this;\n    let keys = Object.keys(ctx.flexs),\n        fo_conditional = count !== undefined ? keys.length === count : keys.length > 1;\n    if (fo_conditional) {\n        keys.forEach(key => {\n            var tbl = document.getElementById(key)\n                .getElementsByClassName('p-datatable');\n            if (tbl.length === 1) {\n                tbl = tbl[0]\n                let width = tbl.getBoundingClientRect().width / document\n                    .getElementsByClassName('layout-topbar')[0]\n                    .getBoundingClientRect().width;\n                if (width > ctx.flexs[key]) {\n                    Array.from(tbl.querySelectorAll(\n                        '.p-datatable table')).forEach(el => {\n                            if (Array.from(el.classList).join(' ')\n                                .includes('p-datatable')) el.style\n                                    .setProperty('table-layout', 'auto');\n                        });\n                }\n            }\n        });\n    }\n}\n\nexport const Labeled = (props) => {\n    const localEx = getExReady(ex, ['classNames']);\n    let label = props.label || props.elem.label;\n    return !localEx.ready ? null : <React.Fragment>\n        {!props.hide_label && label && <React.Fragment>\n            <label\n                className={localEx.classNames.default(\n                    \"l-label\",\n                    {\"l-label--unfilled\": !props.isFilled},\n                )}\n                title={\n                    Object.assign({}, props.elem.value || {}).quicktip\n                    || props.elem.help_text}>{label}:</label>\n            {props.helpText\n                && <span style={{float: 'right', cursor: 'pointer'}}\n                title={props.helpText}>?</span>}\n            <br/>\n        </React.Fragment>}\n        {props.children}\n    </React.Fragment>\n}\n\n\nLabeled.propTypes = {\n    label: PropTypes.string,\n    elem: PropTypes.object.isRequired,\n    hide_label: PropTypes.bool,\n    isFilled: PropTypes.bool,\n    helpText: PropTypes.string,\n    children: PropTypes.element.isRequired,\n}\nLabeled.defaultProps = {\n    hide_label: false,\n    isFilled: false,\n}\n\n\nexport class LeafComponentBase extends Component {\n    static requiredModules = [\"classNames\"];\n    static iPool = ex;\n    static contextType = DataContextType;\n    static propTypesFromLinoLayout = {\n        column: PropTypes.object,\n        editing_mode: PropTypes.bool,\n        hide_label: PropTypes.bool,\n        [constants.URL_PARAM_WINDOW_TYPE]: PropTypes.oneOf([\n            constants.WINDOW_TYPE_TABLE,\n            constants.WINDOW_TYPE_DETAIL,\n            constants.WINDOW_TYPE_CARDS,\n            constants.WINDOW_TYPE_GALLERIA,\n            constants.WINDOW_TYPE_INSERT,\n            constants.WINDOW_TYPE_PARAMS,\n            constants.WINDOW_TYPE_UNKNOWN,\n        ]),\n    }\n\n    static propTypes = {\n        ...LeafComponentBase.propTypesFromLinoLayout,\n        elem: PropTypes.object.isRequired,\n        tabIndex: PropTypes.number.isRequired,\n        urlParams: PropTypes.object.isRequired,\n    }\n\n    static defaultProps = {\n        editing_mode: false,\n        hide_label: false,\n        [constants.URL_PARAM_WINDOW_TYPE]: constants.WINDOW_TYPE_UNKNOWN,\n    }\n\n    constructor(props) {\n        super(props);\n        this.wrapperClasses = []\n        this.dataKey = props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? props.elem.fields_index : props.elem.name;\n\n        this.filled = this.filled.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.getValueByName = this.getValueByName.bind(this);\n        this.innerHTML = this.innerHTML.bind(this);\n        this.setLeafRef = this.setLeafRef.bind(this);\n    }\n\n    filled = () => (![\"\", null, undefined].includes(this.getValue()));\n\n    getValueByName(name) {\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_PARAMS)\n            return this.context.param_values[name];\n        return this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? this.context.rows[this.props.column.rowIndex][name]\n            : this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_CARDS\n                ? this.context[name]\n                : this.context.data[name];\n    }\n\n    getValue() {\n        return this.getValueByName(this.dataKey);\n    }\n\n    innerHTML(dangerous, style={}) {\n        let v = this.getValue() || \"\\u00a0\";\n        if (dangerous) {\n            return <div style={style} dangerouslySetInnerHTML={{__html: v}}/>\n        } else {\n            return <div style={style}>{v}</div>\n        }\n    }\n\n    setLeafRef({input=false, type=\"\"} = {}) {\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL)\n            this.props.urlParams.controller.dataContext.setLeafRef({\n                name: type === 'slave' ? this.actorID\n                    : this.props.elem.name, ref: this, input: input, type: type});\n    }\n}\n\n\nexport class LeafComponentDelayedValue extends LeafComponentBase {\n    static requiredModules = [\"queryString\"].concat(LeafComponentBase.requiredModules);\n    constructor(props) {\n        super(props);\n        this.state = {...this.state, value: null, data_url: null}\n        this.actorID = props.elem.actor_id || (props.elem.name.includes('.')\n            ? props.elem.name : `${props.urlParams.packId}.${props.elem.name}`);\n\n        this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n        this.getData = this.getData.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.update = this.update.bind(this);\n    }\n\n    onReady() {\n        let val = super.getValue();\n        if (!this.props.urlParams.controller.filled(val)) return;\n        this.delayed = val.hasOwnProperty('delayed_value_url');\n        if (this.delayed) {\n            this.setLeafRef({type: \"slave\"});\n            this.getData(val.delayed_value_url);\n        } else {\n            this.setState({value: val});\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (!this.delayed) return this.state.value !== super.getValue();\n        return this.state.value !== nextState.value || (this.state.value !== null &&\n            super.getValue().delayed_value_url !== this.state.data_url);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.delayed) {\n            if (this.state.data_url !== super.getValue().delayed_value_url) {\n                this.setState({value: null});\n                this.update();\n            }\n        } else this.setState({value: super.getValue()});\n    }\n\n    getValue() {\n        return this.state.value;\n    }\n\n    getData(data_url) {\n        this.props.urlParams.controller.actionHandler.silentFetch({\n            path: `${data_url}?${this.ex.queryString.stringify(this.props.urlParams.controller.actionHandler.defaultStaticParams())}`\n        }).then((data) => {\n            this.setState({value: data.data, data_url: data_url});\n        });\n    }\n\n    update() {\n        this.getData(super.getValue().delayed_value_url);\n    }\n}\n\n\nexport class LeafComponentInput extends LeafComponentBase {\n    static requiredModules = [\"prInputText\"].concat(LeafComponentBase.requiredModules);\n    constructor(props) {\n        super(props);\n        this.styleClasses = [\n            \"disabled-input\",\n            \"l-card\",\n            \"unsaved-modification\",\n        ]\n\n        this.componentWillUnmount = this.componentWillUnmount.bind(this);\n\n        this.disabled = this.disabled.bind(this);\n        this.filled = this.filled.bind(this);\n        this.focusible = this.focusible.bind(this);\n        this.getCellStyleClasses = this.getCellStyleClasses.bind(this);\n        this.getInput = this.getInput.bind(this);\n        this.onChangeUpdate = this.onChangeUpdate.bind(this);\n        this.onRef = this.onRef.bind(this);\n        this.setCellStyle = this.setCellStyle.bind(this);\n        this.submit = this.submit.bind(this);\n        this.update = this.update.bind(this);\n    }\n\n    async prepare() {\n        this.inputState = {\n            inputComponent: this.ex.prInputText.InputText,\n            inputOnly: false,\n            inputProps: {},\n            onChangeUpdateAssert: (event) => (true),\n            postOnChange: (event) => (null),\n        }\n        if (this.focusible()) setInputFocus(this);\n        window.addEventListener('message', messageInterceptor(this));\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('message', messageInterceptor(this));\n    }\n\n    disabled() {\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_CARDS)\n            return true;\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_PARAMS)\n            return false;\n        if (!this.props.elem.editable) return true;\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n            let row = this.context.rows[this.props.column.rowIndex],\n                last_item = row[row.length - 1];\n\n            // No meta, assume not disabled;\n            if (!last_item || !last_item.meta) return false;\n            // disable_editing set to true;\n            if (row[row.length - 2]) return true;\n            // check name in the disabled_fields meta;\n            return row[row.length - 3][this.props.elem.name] || false;\n        } else {\n            if (this.context.data.disable_editing) return true;\n            return this.context.data.disabled_fields[this.props.elem.name] || false;\n        }\n    }\n\n    focusible() {\n        if (!this.props.editing_mode) return false;\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) return false;\n        if (!this.inputEl) return false;\n        if (this.disabled()) return false;\n        if ([null, undefined].includes(this.props.urlParams.focusibleTabIndex)) {\n            this.props.urlParams.focusibleTabIndex = this.props.tabIndex;\n            return true;\n        }\n        return this.props.tabIndex === this.props.urlParams.focusibleTabIndex;\n    }\n\n    getCellStyleClasses() {\n        let styleClasses = [];\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n            if (this.context.modifiedRows[this.props.column.rowIndex].includes(\n                this.props.elem.fields_index\n            )) {\n                styleClasses.push(\"unsaved-modification\");\n            }\n        } else {\n            styleClasses.push('l-card');\n            if (this.props[constants.URL_PARAM_WINDOW_TYPE] !== constants.WINDOW_TYPE_CARDS) {\n                if (this.disabled()) styleClasses.push(\"disabled-input\")\n                else if (this.context.modified.includes(this.props.elem.name))\n                    styleClasses.push(\"unsaved-modification\");\n            }\n        }\n        return styleClasses;\n    }\n\n    getInput() {\n        return <this.inputState.inputComponent\n            autoFocus={this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE ? true : undefined}\n            onChange={(e) => {\n                if (!this.inputState.onChangeUpdateAssert(e)) return;\n                this.onChangeUpdate(e);\n                this.inputState.postOnChange(e);\n            }}\n            ref={(el) => {this.inputEl = el}}\n            style={{width: \"100%\"}}\n            tabIndex={this.props.tabIndex}\n            value={this.getValue() || \"\"}\n            {...this.inputState.inputProps}/>;\n    }\n\n    onChangeUpdate(e) {\n        this.update({[this.dataKey]: e.target.value});\n        this.setState({});\n    }\n\n    onKeyDown = (event) => null;\n\n    onRef(ref) {\n        if (ref) {\n            this.container = ref;\n            if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n                this.container = ref.closest(\"td\");\n            }\n            else if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL) {\n                this.container.onclick = (event) => {\n                    if (!this.props.editing_mode) this.props.urlParams.controller\n                        .history.replaceState({editing_mode: true});\n                }\n            }\n        }\n        this.setCellStyle(this.container);\n    }\n\n    setCellStyle(ref) {\n        if (ref) {\n            let classes = this.getCellStyleClasses();\n            this.styleClasses.forEach(item => {ref.classList.remove(item)});\n            classes.forEach(item => {ref.classList.add(item)});\n        }\n    }\n\n    submit() {\n        this.props.urlParams.controller.actionHandler.submit({\n            col: this.props.column});\n    }\n\n    update(values) {\n        this.props.urlParams.controller.actionHandler.update({\n            values: values, elem: this.props.elem, col: this.props.column,\n            windowType: this.props[constants.URL_PARAM_WINDOW_TYPE]});\n    }\n\n    render() {\n        if (!this.state.ready) return null;\n        if (this.container) this.setCellStyle(this.container);\n        return <Labeled {...this.props} elem={this.props.elem} isFilled={this.filled()}>\n            <div\n                className={this.ex.classNames.default(this.wrapperClasses)}\n                onKeyDown={this.onKeyDown}\n                ref={this.onRef}>\n                    {this.inputState.inputOnly ? this.getInput() :\n                        this.props.editing_mode && !this.disabled() ?\n                            this.getInput() : this.innerHTML()\n                    }\n            </div>\n        </Labeled>\n    }\n}\n\n\nexport class LeafComponentInputChoices extends LeafComponentInput {\n    static requiredModules = [\"prDropdown\"].concat(LeafComponentInput.requiredModules);\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...this.state,\n            hidden_value: null\n        }\n\n        this.dataKeyHidden = props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? props.elem.fields_index_hidden\n            : props.elem.name + \"Hidden\";\n\n        this.getInput = this.getInput.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.innerHTML = this.innerHTML.bind(this);\n    }\n\n    getValue() {\n        return {\n            text: super.getValue(),\n            value: this.getValueByName(this.dataKeyHidden)};\n    }\n\n    getInput() {\n        return <div\n            className=\"l-ChoiceListFieldElement\"\n            style={{margin_top: \"1px\"}}>\n            <this.ex.prDropdown.Dropdown\n                tabIndex={this.props.tabIndex}\n                style={{width: \"100%\"}}\n                options={this.options}\n                optionLabel=\"text\"\n                value={this.getValue().value}\n                showClear={this.props.elem.field_options.allowBlank}\n                onChange={(e) => {\n                    this.update({[this.dataKey]: e.value,\n                        [this.dataKeyHidden]: e.value});\n                    this.setState({});\n                }}\n                ref={el => this.inputEl = el}/>\n        </div>\n    }\n\n    innerHTML() {\n        let v = super.getValue() || \"\\u00a0\";\n        return <div style={{whiteSpace: \"nowrap\"}}>{v}</div>\n    }\n}\n"],"names":["ex","name","classNames","queryString","prDropdown","prInputText","setInputFocus","elem","props","setFocus","inputEl","focus","focusInput","inputRef","current","setTimeout","quill","messageInterceptor","event","data","hasOwnProperty","constants","Object","keys","master_data","includes","setState","value","maintainTableWidth","count","ctx","undefined","this","flexs","length","forEach","key","tbl","document","getElementById","getElementsByClassName","getBoundingClientRect","width","Array","from","querySelectorAll","el","classList","join","style","setProperty","RegisterImportPool","Labeled","localEx","getExReady","label","ready","React","hide_label","className","isFilled","title","assign","quicktip","help_text","helpText","float","cursor","children","propTypes","PropTypes","isRequired","defaultProps","LeafComponentBase","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","filled","getValue","wrapperClasses","dataKey","fields_index","bind","_assertThisInitialized","getValueByName","innerHTML","setLeafRef","_createClass","context","param_values","rows","column","rowIndex","dangerous","arguments","v","dangerouslySetInnerHTML","__html","_ref","_ref$input","input","_ref$type","type","urlParams","controller","dataContext","actorID","ref","Component","requiredModules","iPool","contextType","DataContextType","propTypesFromLinoLayout","_defineProperty","editing_mode","_objectSpread","tabIndex","LeafComponentDelayedValue","_LeafComponentBase","_super2","_this2","state","data_url","actor_id","concat","packId","shouldComponentUpdate","getData","update","val","_get","_getPrototypeOf","prototype","delayed","delayed_value_url","nextProps","nextState","prevProps","prevState","_this3","actionHandler","silentFetch","path","stringify","defaultStaticParams","then","LeafComponentInput","_LeafComponentBase2","_prepare","_super3","_this4","onKeyDown","styleClasses","componentWillUnmount","disabled","focusible","getCellStyleClasses","getInput","onChangeUpdate","onRef","setCellStyle","submit","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","inputState","inputComponent","InputText","inputOnly","inputProps","onChangeUpdateAssert","postOnChange","window","addEventListener","stop","apply","removeEventListener","editable","row","last_item","meta","disable_editing","disabled_fields","focusibleTabIndex","modifiedRows","push","modified","_this5","_extends","autoFocus","onChange","e","target","_this6","container","closest","onclick","history","replaceState","classes","item","remove","add","col","values","windowType","LeafComponentInputChoices","_LeafComponentInput","_super4","_this7","hidden_value","dataKeyHidden","fields_index_hidden","text","_this8","margin_top","Dropdown","options","optionLabel","showClear","field_options","allowBlank","whiteSpace"],"sourceRoot":""}