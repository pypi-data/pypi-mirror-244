{"version":3,"file":"main.AutoComplete_LinoToolbar.8b338e84be861caf5905.js","mappings":"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","sources":["webpack://lino_react/./lino_react/react/components/AutoComplete.tsx","webpack://lino_react/./node_modules/@babel/runtime/helpers/esm/get.js","webpack://lino_react/./node_modules/@babel/runtime/helpers/esm/superPropBase.js"],"sourcesContent":["export const name: string = \"AutoComplete\";\nimport * as t from './types';\n\n// @ts-ignore\nimport React from \"react\";\n// @ts-ignore\nimport PropTypes from \"prop-types\";\nimport { RegisterImportPool } from \"./Base\";\nimport { LeafComponentInput } from \"./LinoComponentUtils\";\nimport * as constants from \"./constants\";\n\nlet ex; const exModulePromises = ex = {\n    // @ts-ignore\n    prAutoComplete: import(/* webpackChunkName: \"prAutoComplete_AutoComplete\" */\"primereact/autocomplete\"),\n}\nRegisterImportPool(ex);\n\n\nexport class AutoComplete extends LeafComponentInput {\n    static requiredModules = ['prAutoComplete'].concat(LeafComponentInput.requiredModules);\n    static iPool = Object.assign(ex, LeafComponentInput.iPool.copy());\n\n    hasClearButton: boolean;\n    clear?: () => void;\n    props: t.LeafInputProps;\n    choicesURL?(query: string, start: number, limit: number): string;\n    clearButton?: any;\n    onSelect?(e: any): void;\n    scroller: any;\n\n    constructor(props: t.LeafInputProps) {\n        super(props);\n        this.state = {\n            ...this.state,\n            [constants.URL_PARAM_FILTER]: \"\",\n            [constants.URL_PARAM_LIMIT]: 15,\n            [constants.URL_PARAM_START]: 0,\n            lazyLoading: false,\n            rows: [],\n            value: null,\n        }\n\n        this.hasClearButton = false;\n\n        this.getChoices = this.getChoices.bind(this);\n        this.getInput = this.getInput.bind(this);\n        this.itemTemplate = this.itemTemplate.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n    }\n\n    onReady() {\n        if (this.hasClearButton && !this.clear) throw \"clear NotImplemented\";\n        let v = this.getValue();\n        this.setState({\n            [constants.URL_PARAM_FILTER]: v.text,\n            [constants.URL_PARAM_LIMIT]: this.props.urlParams[\n                constants.URL_PARAM_LIMIT],\n            value: v,\n        });\n    }\n\n    onKeyDown = (event) => {\n        if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n            if (this.inputEl && !this.inputEl.state.overlayVisible) {\n                if (!this.state.rows.length) this.getChoices(this.state[constants.URL_PARAM_FILTER]);\n                this.inputEl.setState({overlayVisible: true})\n            }\n            event.stopPropagation();\n        }\n    }\n\n    itemTemplate = (item) => {\n        let i = typeof item === \"object\" ? item.text : item;\n        return <div dangerouslySetInnerHTML={{__html: i || \"\\u00a0\"}}/>\n    }\n\n    getChoices = (query: string, limit?: number) => {\n        limit = limit || this.state[constants.URL_PARAM_LIMIT];\n        let start = limit === this.state[constants.URL_PARAM_LIMIT]\n            ? this.state[constants.URL_PARAM_START]\n            : this.state[constants.URL_PARAM_LIMIT];\n        this.props.urlParams.controller.actionHandler.silentFetch({\n            path: this.choicesURL(query, start, limit)}\n        ).then((data) => {\n            this.setState({\n                [constants.URL_PARAM_FILTER]: query,\n                [constants.URL_PARAM_LIMIT]: limit,\n                count: data.count,\n                lazyLoading: false,\n                rows: this.state.rows.concat(data.rows),\n            });\n        });\n    }\n\n    getInput(customProps = {}) {\n        if (this.state.value === null) return null;\n        return <React.Fragment><this.ex.prAutoComplete.AutoComplete\n            completeMethod={(e) => this.getChoices(\n                e.query,\n                this.state[constants.URL_PARAM_LIMIT]\n            )}\n            dropdown={true}\n            field=\"text\"\n            itemTemplate={this.itemTemplate}\n            onChange={e => this.setState({\n                value: Object.assign(this.state.value, {\n                    text: e.value, value: null}),\n                rows: [],\n                [constants.URL_PARAM_LIMIT]: this.props.urlParams[\n                    constants.URL_PARAM_LIMIT],\n            })}\n            onSelect={this.onSelect}\n            onShowLoader={() => {\n                if (this.clearButton) {\n                    this.clearButton.style.visibility = 'hidden'\n                }\n            }}\n            ref={(el) => this.inputEl = el}\n            suggestions={this.state.rows}\n            tabIndex={this.props.tabIndex}\n            value={this.state.value.text}\n            virtualScrollerOptions={{\n                itemSize: this.props.urlParams[constants.URL_PARAM_LIMIT],\n                lazy: true,\n                loading: this.state.lazyLoading,\n                onScrollIndexChange: (event) => {\n                    let l = this.state[constants.URL_PARAM_LIMIT];\n                    if (l - event.first < 15 && !this.state.lazyLoading\n                        && this.state.count > l\n                    ) {\n                        this.setState({lazyLoading: true});\n                        this.getChoices(\n                            this.state[constants.URL_PARAM_FILTER], l + 15);\n                    }\n                },\n                ref: el => this.scroller = el,\n                scrollHeight: \"200px\",\n            }}\n            {...customProps}/>\n            {this.hasClearButton && this.props.elem.field_options.allowBlank\n                && this.state.value.text\n                && <i key={this.state.touch} ref={el => this.clearButton = el}\n                className={\"pi pi-times l-fk-clear\"}\n                onClick={this.clear}\n                style={{visibility: 'visible', cursor: \"pointer\"}}/>}\n        </React.Fragment>\n    }\n}\n\ntype QuickFilterProps = t.LeafInputProps & {\n    wide: boolean;\n}\n\nexport class QuickFilter extends AutoComplete {\n    static propTypes = {\n        ...AutoComplete.propTypes,\n        wide: PropTypes.bool,\n    }\n\n    static defaultProps = {\n        ...AutoComplete.defaultProps,\n        editing_mode: true,\n        elem: {},\n        tabIndex: 0,\n        wide: false,\n        [constants.URL_PARAM_WINDOW_TYPE]: constants.WINDOW_TYPE_INSERT,\n    }\n\n    props: QuickFilterProps;\n\n    constructor(props: QuickFilterProps) {\n        super(props);\n        this.wrapperClasses = [\"l-grid-quickfilter\"];\n        this.styleClasses = [];\n\n        this.choicesURL = this.choicesURL.bind(this);\n        this.getInput = this.getInput.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n    }\n\n    getInput() {\n        return super.getInput({\n            placeholder: \"QuickSearch\",\n            style: {\n                width: this.props.wide ? \"100%\" : undefined,\n                marginRight: this.props.wide ? \"1ch\" : undefined,\n                marginLeft: this.props.wide ? \"1ch\" : undefined,\n            }\n        })\n    }\n\n    getValue() {\n        return {text: this.props.urlParams[constants.URL_PARAM_FILTER],\n            value: null}\n    }\n\n    choicesURL(query, start, limit) {\n        return `choices/${this.props.urlParams.packId}/${this.props.urlParams.actorId}?${\n            this.ex.queryString.stringify(Object.assign(this.props.urlParams.controller\n                .actionHandler.defaultStaticParams(), {\n                    [constants.URL_PARAM_FILTER]: query,\n                    [constants.URL_PARAM_START]: start,\n                    [constants.URL_PARAM_LIMIT]: limit\n                }))}`;\n    }\n\n    onSelect(event) {\n        let pk = event.value.value,\n            c = this.props.urlParams.controller;\n        c.history.pushPath({\n            pathname: `/api/${this.props.urlParams.packId}/${this.props.urlParams.actorId}/${pk}`,\n            params: c.actionHandler.defaultStaticParams(),\n        });\n    }\n\n    render() {\n        if (!this.state.ready) return null;\n        return this.getInput();\n    }\n}\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}"],"names":["name","ex","prAutoComplete","RegisterImportPool","AutoComplete","LeafComponentInput","constructor","props","super","onKeyDown","event","key","this","inputEl","state","overlayVisible","rows","length","getChoices","constants","URL_PARAM_FILTER","setState","stopPropagation","itemTemplate","item","i","text","dangerouslySetInnerHTML","__html","query","limit","start","URL_PARAM_LIMIT","URL_PARAM_START","urlParams","controller","actionHandler","silentFetch","path","choicesURL","then","data","count","lazyLoading","concat","value","hasClearButton","bind","getInput","onReady","clear","v","getValue","customProps","Fragment","completeMethod","e","dropdown","field","onChange","Object","assign","onSelect","onShowLoader","clearButton","style","visibility","ref","el","suggestions","tabIndex","virtualScrollerOptions","itemSize","lazy","loading","onScrollIndexChange","l","first","scroller","scrollHeight","elem","field_options","allowBlank","touch","className","onClick","cursor","requiredModules","iPool","copy","QuickFilter","wrapperClasses","styleClasses","placeholder","width","wide","undefined","marginRight","marginLeft","packId","actorId","queryString","stringify","defaultStaticParams","pk","c","history","pushPath","pathname","params","render","ready","propTypes","bool","defaultProps","editing_mode","URL_PARAM_WINDOW_TYPE","WINDOW_TYPE_INSERT","_get","Reflect","get","target","property","receiver","base","object","prototype","hasOwnProperty","call","getPrototypeOf","superPropBase","desc","getOwnPropertyDescriptor","arguments","apply"],"sourceRoot":""}