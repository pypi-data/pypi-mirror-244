# Generated by Django 4.2.7 on 2023-12-03 12:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('created_by', models.IntegerField()),
                ('location_name', models.CharField(max_length=50)),
                ('address1', models.CharField(max_length=50)),
                ('address2', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('postal_code', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('updated_by', models.IntegerField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('year', models.CharField(blank=True, max_length=100, null=True)),
                ('make', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True)),
                ('damage_description', models.CharField(blank=True, max_length=100, null=True)),
                ('carrier', models.CharField(blank=True, max_length=100, null=True)),
                ('cpu', models.CharField(blank=True, max_length=100, null=True)),
                ('ram', models.CharField(blank=True, max_length=100, null=True)),
                ('screen', models.CharField(blank=True, max_length=100, null=True)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('asset_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_user_first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_user_last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_user_address', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_user_city', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_user_state', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_user_postal_code', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_user_country', models.CharField(blank=True, max_length=100, null=True)),
                ('archived', models.BooleanField()),
                ('request_uid', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'asset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AssetDamageType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('damage_type', models.TextField()),
            ],
            options={
                'db_table': 'asset_damage_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AssetHistory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'asset_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AssetStatus',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('status', models.TextField()),
            ],
            options={
                'db_table': 'asset_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AssetType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('type', models.TextField()),
            ],
            options={
                'db_table': 'asset_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField()),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('make', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('model_number', models.CharField(max_length=50)),
                ('memory_size', models.CharField(max_length=50)),
                ('unique_id', models.CharField(max_length=50)),
                ('imei', models.CharField(max_length=50)),
                ('meid', models.CharField(max_length=50)),
                ('serial_number', models.CharField(max_length=50)),
                ('grade', models.CharField(max_length=50)),
                ('three_tier_grade', models.CharField(max_length=50)),
                ('five_tier_grade', models.CharField(max_length=50)),
                ('condition_notes', models.CharField(max_length=50)),
                ('fmi', models.CharField(max_length=50)),
                ('value', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('battery_ratio', models.CharField(max_length=50)),
                ('date_paid', models.DateTimeField(blank=True, null=True)),
                ('iccid', models.CharField(max_length=50)),
                ('audio_jack', models.CharField(max_length=50)),
                ('back_camera', models.CharField(max_length=50)),
                ('front_camera', models.CharField(max_length=50)),
                ('wifi', models.CharField(max_length=50)),
                ('keyboard', models.CharField(max_length=50)),
                ('touchpad', models.CharField(max_length=50)),
                ('ext_ports', models.CharField(max_length=50)),
                ('speakers', models.CharField(max_length=50)),
                ('microphone', models.CharField(max_length=50)),
                ('pressure_spots', models.CharField(max_length=50)),
                ('digitizer', models.CharField(max_length=50)),
                ('lcd', models.CharField(max_length=50)),
                ('water_damage', models.CharField(max_length=50)),
                ('accelerometer', models.CharField(max_length=50)),
                ('homebutton', models.CharField(max_length=50)),
                ('glass_grade', models.CharField(max_length=50)),
                ('lcd_grade', models.CharField(max_length=50)),
                ('inactive', models.CharField(max_length=50)),
                ('backhousing_frame_grade', models.CharField(max_length=50)),
                ('cosmetic_test', models.CharField(max_length=50)),
                ('device_status', models.TextField()),
                ('display_grade', models.CharField(max_length=50)),
                ('engraved', models.CharField(max_length=50)),
                ('functional_test', models.CharField(max_length=50)),
                ('housing_grade', models.CharField(max_length=50)),
                ('keyboard_grade', models.CharField(max_length=50)),
                ('lock_status', models.CharField(max_length=50)),
                ('reference1', models.CharField(max_length=50)),
                ('reference2', models.CharField(max_length=50)),
                ('reference3', models.CharField(max_length=50)),
                ('reference4', models.CharField(max_length=50)),
                ('reference5', models.CharField(max_length=50)),
                ('locked', models.BooleanField()),
                ('corner_description', models.CharField(max_length=50)),
                ('housing_description', models.CharField(max_length=50)),
                ('lcd_description', models.CharField(max_length=50)),
                ('glass_description', models.CharField(max_length=50)),
                ('po', models.CharField(max_length=50)),
                ('battery', models.CharField(max_length=50)),
                ('charging_port', models.CharField(max_length=50)),
                ('device_type_0', models.CharField(db_column='device_type', max_length=50)),
                ('tracking_number', models.CharField(max_length=50)),
                ('approved', models.BooleanField()),
                ('image_list', models.TextField()),
                ('images', models.TextField()),
            ],
            options={
                'db_table': 'audit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BoxNotification',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('notification_type', models.TextField()),
                ('email', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'box_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BoxStatus',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'box_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Carrier',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('reference', models.CharField(max_length=50)),
                ('carrier_id', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('carrier_type', models.TextField()),
            ],
            options={
                'db_table': 'carrier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ColumnVisibility',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.IntegerField()),
                ('updated_at', models.DateTimeField()),
                ('user_id', models.IntegerField()),
                ('processed_date', models.BooleanField()),
                ('request_date', models.BooleanField()),
                ('make', models.BooleanField()),
                ('model', models.BooleanField()),
                ('model_number', models.BooleanField()),
                ('memory_size', models.BooleanField()),
                ('unique_id', models.BooleanField()),
                ('imei', models.BooleanField()),
                ('meid', models.BooleanField()),
                ('serial_number', models.BooleanField()),
                ('tracking_number', models.BooleanField()),
                ('grade', models.BooleanField()),
                ('condition_notes', models.BooleanField()),
                ('fmi', models.BooleanField()),
                ('value', models.BooleanField()),
                ('battery_ratio', models.BooleanField()),
                ('tracking_reference', models.BooleanField()),
                ('reference', models.BooleanField()),
                ('lock_status', models.BooleanField()),
                ('po', models.BooleanField()),
                ('battery', models.BooleanField()),
                ('glass_description', models.BooleanField()),
                ('lcd_description', models.BooleanField()),
                ('housing_description', models.BooleanField()),
                ('corner_description', models.BooleanField()),
                ('first_name', models.BooleanField()),
                ('last_name', models.BooleanField()),
                ('city', models.BooleanField()),
                ('state', models.BooleanField()),
                ('phone', models.BooleanField()),
                ('email', models.BooleanField()),
            ],
            options={
                'db_table': 'column_visibility',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_by', models.IntegerField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'contact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CountryCodes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=50)),
                ('alpha_2_code', models.CharField(max_length=50)),
                ('alpha_3_code', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'country_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataErasure',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
                ('website_url', models.CharField(max_length=50)),
                ('certificate_example', models.BinaryField(blank=True, null=True)),
                ('certifications', models.TextField()),
                ('policy', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'data_erasure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Delivered',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('tracking_number', models.CharField(max_length=50)),
                ('processed', models.BooleanField()),
            ],
            options={
                'db_table': 'delivered',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceListType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'device_list_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceMasterList',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('composite_name', models.CharField(max_length=50)),
                ('evercycle_id', models.CharField(max_length=50)),
                ('make', models.CharField(max_length=50)),
                ('model_type', models.CharField(max_length=50)),
                ('model_sub', models.CharField(max_length=50)),
                ('year', models.CharField(max_length=50)),
                ('screen_size', models.CharField(max_length=50)),
                ('dimensions', models.CharField(max_length=50)),
                ('storage_type', models.CharField(max_length=50)),
                ('storage_amount', models.CharField(max_length=50)),
                ('cpu_brand', models.CharField(max_length=50)),
                ('cpu_model', models.CharField(max_length=50)),
                ('cpu_speed', models.CharField(max_length=50)),
                ('ram_type', models.CharField(max_length=50)),
                ('ram_amount', models.CharField(max_length=50)),
                ('wireless_type', models.CharField(max_length=50)),
                ('wireless_sub', models.CharField(max_length=50)),
                ('asins', models.TextField()),
                ('keywords_list', models.TextField()),
                ('image', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'device_master_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceMasterListHold',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('composite_name', models.CharField(max_length=50)),
                ('evercycle_id', models.CharField(max_length=50)),
                ('make', models.CharField(max_length=50)),
                ('model_type', models.CharField(max_length=50)),
                ('model_sub', models.CharField(max_length=50)),
                ('year', models.CharField(max_length=50)),
                ('screen_size', models.CharField(max_length=50)),
                ('dimensions', models.CharField(max_length=50)),
                ('storage_type', models.CharField(max_length=50)),
                ('storage_amount', models.CharField(max_length=50)),
                ('cpu_brand', models.CharField(max_length=50)),
                ('cpu_model', models.CharField(max_length=50)),
                ('cpu_speed', models.CharField(max_length=50)),
                ('ram_type', models.CharField(max_length=50)),
                ('ram_amount', models.CharField(max_length=50)),
                ('wireless_type', models.CharField(max_length=50)),
                ('wireless_sub', models.CharField(max_length=50)),
                ('asins', models.TextField()),
                ('keywords_list', models.TextField()),
                ('image', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'device_master_list_hold',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'device_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dispatched',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('case_number', models.IntegerField()),
                ('case_created_date', models.CharField(max_length=50)),
                ('intended_destination', models.CharField(max_length=50)),
                ('user_s_name', models.CharField(max_length=50)),
                ('notes', models.CharField(blank=True, max_length=100, null=True)),
                ('line_address_1', models.CharField(max_length=50)),
                ('line_address_2', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('zipcode', models.IntegerField()),
                ('asset_serial_number', models.CharField(max_length=50)),
                ('outbound_tracking', models.CharField(max_length=50)),
                ('inbound_tracking', models.IntegerField()),
                ('processed', models.BooleanField()),
                ('serial', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'dispatched',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DmdDevices',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('serial_number', models.CharField(max_length=50)),
                ('store_number', models.IntegerField()),
                ('contact', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('st', models.CharField(max_length=50)),
                ('zip', models.IntegerField()),
                ('model', models.CharField(max_length=50)),
                ('count', models.IntegerField()),
            ],
            options={
                'db_table': 'dmd_devices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DmdReceiveStatus',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('status', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'dmd_receive_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DmdReceivingJournal',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('note', models.CharField(max_length=50)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dmd_receiving_journal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DmdSf',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('asset_contact_contact_id', models.CharField(max_length=50)),
                ('asset_contact_full_name', models.CharField(max_length=50)),
                ('asset_name', models.CharField(max_length=50)),
                ('asset_transaction_number', models.CharField(max_length=50)),
                ('disposal_only', models.BooleanField()),
                ('open_transactions', models.CharField(max_length=50)),
                ('type_of_asset', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_contact_mailing_country', models.CharField(max_length=50)),
                ('date_returned', models.CharField(blank=True, max_length=100, null=True)),
                ('case_number', models.IntegerField()),
                ('address', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=50)),
                ('address1', models.CharField(max_length=50)),
                ('address2', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('postal_code', models.CharField(max_length=50)),
                ('error', models.CharField(max_length=50)),
                ('serial_number', models.CharField(max_length=50)),
                ('processed', models.BooleanField()),
            ],
            options={
                'db_table': 'dmd_sf',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlatfileRequest',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('batch_id', models.CharField(max_length=50)),
                ('user_id', models.IntegerField()),
                ('total_rows', models.IntegerField()),
                ('uploaded', models.BooleanField()),
                ('processed', models.BooleanField()),
            ],
            options={
                'db_table': 'flatfile_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlatfileUpload',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('contact', models.TextField()),
                ('address', models.TextField()),
                ('reference1', models.CharField(max_length=50)),
                ('reference2', models.CharField(max_length=50)),
                ('reference3', models.CharField(max_length=50)),
                ('device_info', models.TextField()),
                ('checksum', models.CharField(max_length=50)),
                ('devices', models.TextField()),
                ('serial_list', models.TextField()),
            ],
            options={
                'db_table': 'flatfile_upload',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeolocationData',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('country_iso3', models.CharField(max_length=50)),
                ('postal_code', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('state_abbr', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'geolocation_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('device_image', models.BinaryField(blank=True, null=True)),
                ('note', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'image',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Integrations',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
                ('oauth_redirect_url', models.CharField(max_length=50)),
                ('metadata', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('logo', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'integrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IntegrationUser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('user_id', models.CharField(max_length=50)),
                ('meta_data', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'integration_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('make', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True)),
                ('memory_size', models.CharField(max_length=50)),
                ('carrier', models.CharField(max_length=50)),
                ('reference', models.CharField(max_length=50)),
                ('received', models.BooleanField()),
                ('received_date', models.DateTimeField(blank=True, null=True)),
                ('counted', models.BooleanField()),
                ('device_type', models.CharField(max_length=50)),
                ('imported', models.BooleanField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'inventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoiced1',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('request_uid', models.CharField(max_length=50)),
                ('organization', models.CharField(max_length=50)),
                ('program', models.CharField(max_length=50)),
                ('device_count', models.IntegerField()),
                ('date_ticket_requested', models.CharField(max_length=50)),
                ('date_delivered_by_carrier', models.CharField(max_length=50)),
                ('return_tracking', models.IntegerField()),
                ('outbound_tracking', models.IntegerField()),
                ('package', models.CharField(max_length=50)),
                ('contact_first_name', models.CharField(max_length=50)),
                ('contact_last_name', models.CharField(max_length=50)),
                ('contact_address', models.CharField(max_length=50)),
                ('device_types', models.CharField(max_length=50)),
                ('serials', models.CharField(blank=True, max_length=100, null=True)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'invoiced_1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoiced2',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('request_uid', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'invoiced_2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LookupRecyclingProcessor',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('county_fips', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('county_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'lookup_recycling_processor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
                ('tax_id', models.CharField(max_length=50)),
                ('updated_by', models.IntegerField()),
                ('updated_at', models.DateTimeField()),
                ('logo_image', models.BinaryField(blank=True, null=True)),
                ('address_0', models.TextField(db_column='address')),
                ('contact', models.TextField()),
                ('organization_type', models.TextField(blank=True, null=True)),
                ('logo', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'organization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizationCollection',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('organization_list', models.TextField()),
            ],
            options={
                'db_table': 'organization_collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizationIntegration',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'organization_integration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizationIntegrations',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('metadata', models.CharField(max_length=50)),
                ('archived', models.BooleanField()),
                ('foreign_id', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'organization_integrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PackagesReceived',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('received', models.IntegerField()),
                ('total', models.IntegerField()),
            ],
            options={
                'db_table': 'packages_received',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PackageType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('dimension', models.TextField()),
                ('capacity', models.IntegerField()),
                ('easypost_parcel_id', models.CharField(max_length=50)),
                ('easypost_parcel_id_test', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'package_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pdf',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('cod_id', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pdf',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pricebook',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('devicename', models.CharField(blank=True, max_length=100, null=True)),
                ('unitprice', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('sfid', models.CharField(blank=True, max_length=100, null=True)),
                ('pricebook2id', models.TextField(blank=True, null=True)),
                ('product2id', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField()),
            ],
            options={
                'db_table': 'pricebook',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PricebookCatalog',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('test', models.BooleanField()),
            ],
            options={
                'db_table': 'pricebook_catalog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PricebookCatalogPrice',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('grade_price', models.TextField()),
            ],
            options={
                'db_table': 'pricebook_catalog_price',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
                ('main_contact_name', models.CharField(max_length=50)),
                ('main_contact_email', models.CharField(max_length=50)),
                ('main_contact_phone', models.CharField(max_length=50)),
                ('warehouse_auth_id', models.CharField(max_length=50)),
                ('warehouse_id_ret', models.IntegerField()),
                ('warehouse_id_out', models.IntegerField()),
                ('warehouse_id_nofill', models.CharField(max_length=50)),
                ('warehouse_id_ret_test', models.IntegerField()),
                ('warehouse_id_out_test', models.IntegerField()),
                ('contact_id', models.IntegerField()),
                ('address_0', models.TextField(db_column='address')),
                ('contact', models.TextField()),
                ('easypost_address_id', models.CharField(max_length=50)),
                ('easypost_address_id_test', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'processor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('program_name', models.CharField(max_length=50)),
                ('program_description', models.CharField(max_length=50)),
                ('start_date', models.DateTimeField()),
                ('created_by', models.IntegerField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField()),
                ('three_tier_grade', models.BooleanField()),
                ('gradescaletype', models.CharField(max_length=50)),
                ('notify_locks', models.BooleanField()),
                ('disable_email_notification', models.BooleanField()),
                ('bill_to_my_other_account', models.CharField(max_length=50)),
                ('outbound_service_level', models.TextField()),
                ('return_service_level', models.TextField()),
                ('aftership_slug', models.CharField(max_length=50)),
                ('service', models.TextField()),
                ('test', models.BooleanField()),
                ('device_location_type', models.TextField()),
                ('device_location_type_conus_choice', models.TextField()),
                ('workflow_poc', models.CharField(max_length=50)),
                ('workflow_poc_email', models.CharField(max_length=50)),
                ('workflow_status', models.TextField()),
                ('device_sample', models.CharField(max_length=50)),
                ('frequency_type', models.TextField()),
                ('frequency', models.IntegerField()),
            ],
            options={
                'db_table': 'program',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProgramCollection',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('program_list', models.TextField()),
            ],
            options={
                'db_table': 'program_collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProgramDeviceQuantity',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=65535, max_digits=65535)),
            ],
            options={
                'db_table': 'program_device_quantity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProgramType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'program_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Purchaser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('address', models.TextField()),
                ('contact', models.TextField()),
                ('website', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'purchaser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PyxeraFormData',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('reference', models.CharField(max_length=50)),
                ('notes', models.CharField(max_length=50)),
                ('address1', models.CharField(max_length=50)),
                ('address2', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('postal_code', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=50)),
                ('howlong', models.CharField(max_length=50)),
                ('otherdevices', models.IntegerField()),
                ('allowfollowup', models.BooleanField()),
                ('serialnumber', models.CharField(max_length=50)),
                ('tracking_number', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'pyxera_form_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
                ('customer_name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('device_object', models.TextField()),
            ],
            options={
                'db_table': 'quote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuoteHistory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
                ('customer_name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('device_object', models.TextField()),
            ],
            options={
                'db_table': 'quote_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReplacedTracking',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('tracked_box_id', models.IntegerField()),
            ],
            options={
                'db_table': 'replaced_tracking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('created_by', models.IntegerField()),
                ('reference', models.CharField(max_length=50)),
                ('processed', models.BooleanField()),
                ('address', models.TextField()),
                ('contact_list', models.TextField()),
                ('request_type_0', models.TextField(db_column='request_type')),
                ('pickup_info', models.TextField()),
                ('updated_by', models.IntegerField()),
                ('updated_at', models.DateTimeField()),
                ('serial_list', models.TextField()),
                ('disposition_list', models.TextField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestBoxQuantity',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('quantity', models.IntegerField()),
                ('sleeve_count', models.IntegerField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'request_box_quantity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestDeviceQuantity',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('quantity', models.IntegerField()),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'request_device_quantity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestDeviceType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('device', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'request_device_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'request_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
                ('logo', models.BinaryField(blank=True, null=True)),
                ('description', models.CharField(max_length=50)),
                ('headquarters_address', models.CharField(max_length=50)),
                ('warehouse_address', models.CharField(max_length=50)),
                ('device_specialization', models.CharField(max_length=50)),
                ('industry_specialization', models.CharField(max_length=50)),
                ('certifications', models.TextField()),
                ('services', models.TextField()),
                ('report_services', models.TextField()),
                ('warehouse_security', models.TextField()),
                ('audit_report_sla', models.TextField()),
                ('sample_audit_report', models.BinaryField(blank=True, null=True)),
                ('device_audit_pictures', models.TextField()),
                ('data_erasure_id', models.TextField()),
                ('payment_terms', models.TextField()),
                ('payment_methods', models.TextField()),
                ('processor_id', models.TextField()),
                ('service_provider_workflow_email', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'service_provider',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderServices',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('service_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'service_provider_services',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('session_id', models.CharField(max_length=50)),
                ('customer_id', models.CharField(max_length=50)),
                ('amount_subtotal', models.IntegerField()),
                ('amount_total', models.IntegerField()),
                ('payment_intent_id', models.CharField(max_length=50)),
                ('payment_status', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('user_id', models.IntegerField()),
                ('page', models.TextField()),
                ('request', models.TextField()),
                ('dashboard', models.TextField()),
                ('updated_at', models.DateTimeField()),
                ('updated_by', models.IntegerField()),
            ],
            options={
                'db_table': 'settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShippingStatus',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('general_status', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'shipping_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShippingStatusDetailEasypost',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('status_id', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'shipping_status_detail_easypost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShippingStatusEasypost',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('status_id', models.IntegerField()),
                ('general_status', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'shipping_status_easypost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpPricebook',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=50)),
                ('grade_scale', models.TextField()),
            ],
            options={
                'db_table': 'sp_pricebook',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('field', models.IntegerField()),
                ('csv', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestAttributes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('attributes', models.TextField()),
                ('list_enums', models.TextField()),
            ],
            options={
                'db_table': 'test_attributes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackedBox',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('status_date', models.DateTimeField(blank=True, null=True)),
                ('label', models.CharField(max_length=50)),
                ('error', models.CharField(max_length=50)),
                ('sleeve_count', models.IntegerField()),
                ('request_uid', models.CharField(max_length=50)),
                ('deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'tracked_box',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackedBoxCsv',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('request_uid', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('note', models.CharField(max_length=50)),
                ('status_date', models.DateField(blank=True, null=True)),
                ('program', models.CharField(max_length=50)),
                ('organization', models.CharField(max_length=50)),
                ('outbound_tracking', models.CharField(max_length=50)),
                ('return_tracking', models.CharField(max_length=50)),
                ('request_reference', models.CharField(max_length=50)),
                ('package', models.CharField(max_length=50)),
                ('date_requested', models.DateField(blank=True, null=True)),
                ('package_status', models.CharField(max_length=50)),
                ('carrier_status_date', models.DateField(blank=True, null=True)),
                ('contact_first_name', models.CharField(max_length=50)),
                ('contact_last_name', models.CharField(max_length=50)),
                ('contact_address', models.CharField(max_length=50)),
                ('serials', models.TextField()),
                ('device_types', models.TextField()),
            ],
            options={
                'db_table': 'tracked_box_csv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tracking',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('tracking_number', models.CharField(max_length=50)),
                ('last_checkpoint', models.IntegerField()),
                ('updated_at', models.DateTimeField()),
                ('retrack_count', models.IntegerField()),
                ('last_retrack_date', models.DateTimeField(blank=True, null=True)),
                ('label', models.CharField(max_length=50)),
                ('last_print_date', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.BooleanField()),
                ('archived', models.BooleanField()),
            ],
            options={
                'db_table': 'tracking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackingStatus',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('checkpoint_order', models.IntegerField()),
                ('detailed_status', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('postal_code', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('status_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracking_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('csv', models.BinaryField(blank=True, null=True)),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'upload',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WipDeviceMasterList',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('composite_name', models.CharField(max_length=50)),
                ('evercycle_id', models.CharField(max_length=50)),
                ('make', models.CharField(max_length=50)),
                ('model_type', models.CharField(max_length=50)),
                ('model_sub', models.CharField(max_length=50)),
                ('year', models.CharField(max_length=50)),
                ('screen_size', models.CharField(max_length=50)),
                ('dimensions', models.CharField(max_length=50)),
                ('storage_type', models.CharField(max_length=50)),
                ('storage_amount', models.CharField(max_length=50)),
                ('cpu_brand', models.CharField(max_length=50)),
                ('cpu_model', models.CharField(max_length=50)),
                ('cpu_speed', models.CharField(max_length=50)),
                ('ram_type', models.CharField(max_length=50)),
                ('ram_amount', models.CharField(max_length=50)),
                ('wireless_type', models.CharField(max_length=50)),
                ('wireless_sub', models.CharField(max_length=50)),
                ('asins', models.TextField()),
                ('keywords_list', models.TextField()),
                ('image', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wip_device_master_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evercycle_models.organization')),
            ],
        ),
    ]
