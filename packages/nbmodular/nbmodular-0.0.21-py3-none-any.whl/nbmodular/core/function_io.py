# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/function_io.ipynb.

# %% auto 0
__all__ = ['load_df', 'save_df', 'load_pickle', 'save_pickle', 'load_csv', 'save_csv', 'load_parquet', 'save_parquet', 'load',
           'save']

# %% ../../nbs/function_io.ipynb 2
import pdb
import joblib
import os
import re
import argparse
import shlex
from dataclasses import dataclass
from functools import reduce
from pathlib import Path
import sys
import ast
import logging
import warnings

from IPython import get_ipython
from IPython.core.magic import (Magics, magics_class, line_magic,
                                cell_magic, line_cell_magic)
from IPython.core.magic_arguments import (argument, magic_arguments, parse_argstring)
import ipynbname
from sklearn.utils import Bunch
from fastcore.all import argnames
import nbdev

# %% ../../nbs/function_io.ipynb 4
def load_df (path, **kwargs):
    if (path.parent / f'{path.name}.parquet').exists():
        df = pd.read_parquet (path.parent / f'{path.name}.parquet', **kwargs)
    elif (path.parent / f'{path.name}.pk').exists():
        df = pd.read_parquet (path.parent / f'{path.name}.pk', **kwargs)
    elif (path.parent / f'{path.name}.csv').exists():
        df = pd.read_parquet (path.parent / f'{path.name}.csv', **kwargs)
    else:
        raise RuntimeError (f'File {path} not found')
    return df

# %% ../../nbs/function_io.ipynb 5
def save_df (df, path, **kwargs):
    path.parent.mkdir (parents=True, exist_ok=True)
    name_without_extension = path.name[:-len('.df')]
    extension = ''
    try:
        df.to_parquet (path.parent / f'{name_without_extension}.parquet', **kwargs)
        extension='parquet'
    except:
        try:
            df.to_pickle (path.parent / f'{name_without_extension}.pk', **kwargs)
            extension='pickle'
        except:
            df.to_csv (path.parent / f'{name_without_extension}.csv', **kwargs)
            extension='csv'
    with open (path, 'wt') as f: 
        f.write (extension)

# %% ../../nbs/function_io.ipynb 7
def load_pickle (path, **kwargs):
    return joblib.load (path, **kwargs)

# %% ../../nbs/function_io.ipynb 8
def save_pickle (data, path, **kwargs):
    joblib.dump (data, path, **kwargs)

# %% ../../nbs/function_io.ipynb 10
def load_csv (path, **kwargs):
    return pd.read_csv (path, **kwargs)

# %% ../../nbs/function_io.ipynb 11
def save_csv (df, path, **kwargs):
    df.to_csv (path, **kwargs)

# %% ../../nbs/function_io.ipynb 13
def load_parquet (df, **kwargs):
    return pd.read_parquet (path, **kwargs)

# %% ../../nbs/function_io.ipynb 14
def save_parquet (df, path, **kwargs):
    df.to_parquet (path, **kwargs)

# %% ../../nbs/function_io.ipynb 16
def load (
    path_variables,
    io_type='pickle',
    **kwargs,
):
    load_function = eval (f'load_{io_type}')
    return load_function (path_variables, **kwargs)

# %% ../../nbs/function_io.ipynb 18
def save (
    data,
    path_variables,
    io_type='pickle',
    **kwargs,
):
    Path(path_variables).parent.mkdir (parents=True, exist_ok=True)
    save_function = eval (f'save_{io_type}')
    return save_function (data, path_variables, **kwargs)
