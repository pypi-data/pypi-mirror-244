Metadata-Version: 2.1
Name: pathconf
Version: 1.0.5.5
Summary: Uses os.walk to find and catalogue a given file. Built to call some scripts from inside others on different machines since onedrive kept giving itself a random path and was a pain to manage
Author: Sam Kirby
Author-email: sam.kirby@gagamuller.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.1
Description-Content-Type: text/markdown

**I do not recommend using this project as it was created for internal use. Due to this it is quite specific in its usecase and quite messy.**

As stated in the short description this project simply uses os.walk to traverse a filesystem, starting in the users home directory, looking for a given file.
It was created for internal use as there are several of us in the office running python scripts which are located on a onedrive and each time a new machine was initialised onedrive would have wildly different paths.
Originally we were just using a simple function at the start of each script which would return the onedrive path but as different parts of the path started changing with new devices I realised this would quickly become an incredibly intricate and inneficient solution so I wrote this to help solve it. Published here for easier distribution around the office.

Yes I know the name is bad I'm not good with names.

use:

'''
import pathconf

pathconf.find_path('filename.filetype')
'''

This will create a .file_paths json file in home/.config/pathconf/ if it doesn't already exist and then will search for your file. Once found it will add that file to the pathconf file for quicker access in future runs. 
If the file does already exist it will lookup your desired file and if it exists in the pathconf.json it will then check that the file exists where stated.
If the file exists where the pathconf.json says it does then it will use that file, if the file doesn't exist there or the file doesn't appear in the pathconf.json then it will search for the file and append it to the pathconf.json.
