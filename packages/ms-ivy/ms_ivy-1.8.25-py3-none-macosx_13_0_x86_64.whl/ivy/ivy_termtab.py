
# ivy_termtab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'termleftSEMIleftGLOBALLYEVENTUALLYleftIFleftELSEleftORleftANDleftTILDAleftEQLELTGEGTleftTILDAEQleftCOLONleftPLUSleftMINUSleftTIMESleftDIVleftDOLLARleftOLDleftDOTACTION AFTER ALIAS AND APPLY AROUND ARROW ASSERT ASSIGN ASSUME ATTRIBUTE AUTOINSTANCE AXIOM BEFORE CALL CARET CLASS COLON COMMA COMMON CONCEPT CONJECTURE CONSTRUCTOR DEBUG DECREASES DEFERGOAL DEFINITION DELEGATE DERIVED DESTRUCTOR DIV DOLLAR DOT DOTDOTDOT DOTS ELSE ENSURE ENSURES ENTRY EQ EVENTUALLY EXISTS EXPLICIT EXPORT EXTRACT EXTRACT FALSE FIELD FINITE FOR FORALL FORGET FRESH FROM FUNCTION GE GHOST GLOBAL GLOBALLY GT IF IFF IMPLEMENT IMPLEMENTATION IMPORT IN INCLUDE INDIV INIT INSTANTIATE INSTANTIATE INTERPRET INVARIANT ISA ISOLATE LB LCB LE LET LOCAL LPAREN LT MACRO MATCH MAXIMIZING METHOD MINIMIZING MINUS MIXIN MIXIN MIXORD MODIFIES MODULE MODULE NAMED NATIVEQUOTE NULL OBJECT OF OLD OR PARAMETER PARAMS PLUS PRESYMBOL PRIVATE PROGRESS PROOF PROPERTY PTO RB RCB RELATION RELY REQUIRE REQUIRES RETURNS RPAREN SCENARIO SCHEMA SEMI SET SHOWGOALS SOME SPECIFICATION SPOIL STATE STRUCT SUBCLASS TACTIC TEMPORAL THEOREM THIS THUNK TILDA TILDAEQ TIMES TRIGGER TRUE TRUSTED TYPE UNFOLD UNPROVABLE UNPROVABLETRIGGER UPDATE USING VAR VARIABLE VARIANT WHENFIRST WHENFIRST WHENLAST WHENLAST WHENNEXT WHENNEXT WHENPREV WHENPREV WHILE WITHSYMBOL : PRESYMBOLSYMBOL : SYMBOL LB SYMsubscr RBLABEL : LB SYMBOL RBSYMsubscr : SYMBOLSYMsubscr : THISSYMsubscr : SYMsubscr DOT SYMBOLatype : SYMBOLatype : atype DOT SYMBOLatype : THISappelem : SYMBOLappelem : SYMBOL LPAREN terms RPARENvar : VARIABLEvar : VARIABLE COLON atypesimplevar : VARIABLEsimplevar : VARIABLE COLON SYMBOLterm : appelemterm : OLD appelemterm : term DOT appelematerm : appelematerm : aterm DOT appelemterm : term COLON atypeterm : varterm : term PLUS termterm : term MINUS termterm : term TIMES termterm : term DIV termterm : term IF fmla ELSE termterms : terms : termterms : terms COMMA termterm : LPAREN term RPARENvars : varvars : vars COMMA varsimplevars : simplevarsimplevars : simplevars COMMA simplevarapp : SYMBOLapp : SYMBOL LPAREN terms RPARENapp : term infix termapps : appapps : apps COMMA appatom : SYMBOLatom : SYMBOL LPAREN terms RPARENatoms : atomatoms : atoms COMMA atomlit : atomlit : SYMBOL EQ SYMBOLlit : SYMBOL TILDAEQ SYMBOLlit : TILDA litrelop : EQrelop : LErelop : LTrelop : GErelop : GTrelop : PTOinfix : PLUSinfix : MINUSinfix : TIMESinfix : DIVfmla : termterm : term EQ termterm : term LE termterm : term LT termterm : term GE termterm : term GT termterm : term PTO termterm : term TILDAEQ termterm : TRUEterm : FALSEterm : TILDA termterm : term AND termterm : term OR termterm : term ARROW termterm : term IFF termterm : FORALL simplevars DOT term %prec SEMIterm : EXISTS simplevars DOT term %prec SEMIterm : FORALL LPAREN vars RPAREN termterm : EXISTS LPAREN vars RPAREN termterm : GLOBALLY termterm : EVENTUALLY termterm : term WHENNEXT termterm : term WHENPREV termterm : term WHENFIRST termterm : term WHENLAST termterm : LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPARENterm : DOLLAR SYMBOL DOT fmla %prec SEMIterm : DOLLAR SYMBOL DOLLAR fmla %prec SEMIterm : term ISA atype'
    
_lr_action_items = {'OLD':([0,5,8,11,12,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,53,84,89,91,92,100,104,108,112,117,125,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'LPAREN':([0,5,8,9,10,11,12,14,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,53,84,89,91,92,100,104,108,112,113,117,124,125,],[5,5,5,45,49,5,5,53,-1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-2,5,125,5,]),'TRUE':([0,5,8,11,12,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,53,84,89,91,92,100,104,108,112,117,125,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'FALSE':([0,5,8,11,12,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,53,84,89,91,92,100,104,108,112,117,125,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'TILDA':([0,5,8,11,12,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,53,84,89,91,92,100,104,108,112,117,125,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FORALL':([0,5,8,11,12,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,53,84,89,91,92,100,104,108,112,117,125,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'EXISTS':([0,5,8,11,12,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,53,84,89,91,92,100,104,108,112,117,125,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'GLOBALLY':([0,5,8,11,12,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,53,84,89,91,92,100,104,108,112,117,125,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'EVENTUALLY':([0,5,8,11,12,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,53,84,89,91,92,100,104,108,112,117,125,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'DOLLAR':([0,5,8,11,12,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,52,53,83,84,89,91,92,100,104,108,112,113,117,125,],[13,42,13,13,13,-1,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,91,13,91,13,13,13,13,13,13,13,13,-2,13,13,]),'VARIABLE':([0,5,8,9,10,11,12,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,45,49,53,83,84,85,89,91,92,100,104,105,108,112,113,117,125,],[15,15,15,47,47,15,15,-1,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,47,15,47,15,15,15,15,15,15,15,15,-2,15,15,]),'PRESYMBOL':([0,3,5,8,11,12,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,53,54,55,84,88,89,91,92,99,100,104,108,112,114,117,125,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'$end':([1,2,4,6,7,14,15,16,40,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,98,102,107,109,110,111,113,115,116,118,120,127,],[0,-16,-22,-67,-68,-10,-12,-1,-17,-69,-78,-79,-18,-21,-7,-9,-23,-24,-25,-26,-59,-60,-61,-62,-63,-64,-65,-66,-70,-71,-72,-73,-80,-81,-82,-83,-87,-31,-13,-74,-75,-86,-85,-11,-2,-8,-27,-76,-77,-84,]),'DOT':([1,2,4,6,7,14,15,16,40,41,43,44,46,47,48,50,51,52,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,94,95,96,97,98,101,102,103,106,107,109,110,111,113,115,116,118,120,121,122,127,],[17,-16,-22,-67,-68,-10,-12,-1,-17,17,17,84,-34,-14,89,17,17,92,-18,99,-7,-9,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,99,-31,92,17,-4,114,-5,99,117,17,-35,-15,17,-86,-85,-11,-2,-8,17,17,17,17,-6,-84,]),'COLON':([1,2,4,6,7,14,15,16,40,41,43,47,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[18,-16,-22,-67,-68,-10,55,-1,-17,18,18,88,18,18,-18,-21,-7,-9,-23,-24,-25,-26,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-87,-31,18,-13,18,18,-86,-85,-11,-2,-8,18,18,18,18,-84,]),'PLUS':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[19,-16,-22,-67,-68,-10,-12,-1,-17,19,19,19,19,-18,-21,-7,-9,-23,-24,-25,-26,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-87,-31,19,-13,19,19,-86,-85,-11,-2,-8,19,19,19,19,-84,]),'MINUS':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[20,-16,-22,-67,-68,-10,-12,-1,-17,20,20,20,20,-18,-21,-7,-9,20,-24,-25,-26,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-87,-31,20,-13,20,20,-86,-85,-11,-2,-8,20,20,20,20,-84,]),'TIMES':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[21,-16,-22,-67,-68,-10,-12,-1,-17,21,21,21,21,-18,-21,-7,-9,21,21,-25,-26,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-87,-31,21,-13,21,21,-86,-85,-11,-2,-8,21,21,21,21,-84,]),'DIV':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[22,-16,-22,-67,-68,-10,-12,-1,-17,22,22,22,22,-18,-21,-7,-9,22,22,22,-26,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-87,-31,22,-13,22,22,-86,-85,-11,-2,-8,22,22,22,22,-84,]),'IF':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[23,-16,-22,-67,-68,-10,-12,-1,-17,23,-69,23,23,-18,-21,-7,-9,-23,-24,-25,-26,23,-60,-61,-62,-63,-64,23,-66,-70,-71,23,23,23,23,23,23,-87,-31,23,-13,23,23,-86,-85,-11,-2,-8,-27,23,23,23,-84,]),'EQ':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[24,-16,-22,-67,-68,-10,-12,-1,-17,24,24,24,24,-18,-21,-7,-9,-23,-24,-25,-26,24,-60,-61,-62,-63,-64,24,-66,24,24,24,24,24,24,24,24,-87,-31,24,-13,24,24,-86,-85,-11,-2,-8,24,24,24,24,-84,]),'LE':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[25,-16,-22,-67,-68,-10,-12,-1,-17,25,25,25,25,-18,-21,-7,-9,-23,-24,-25,-26,25,-60,-61,-62,-63,-64,25,-66,25,25,25,25,25,25,25,25,-87,-31,25,-13,25,25,-86,-85,-11,-2,-8,25,25,25,25,-84,]),'LT':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[26,-16,-22,-67,-68,-10,-12,-1,-17,26,26,26,26,-18,-21,-7,-9,-23,-24,-25,-26,26,-60,-61,-62,-63,-64,26,-66,26,26,26,26,26,26,26,26,-87,-31,26,-13,26,26,-86,-85,-11,-2,-8,26,26,26,26,-84,]),'GE':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[27,-16,-22,-67,-68,-10,-12,-1,-17,27,27,27,27,-18,-21,-7,-9,-23,-24,-25,-26,27,-60,-61,-62,-63,-64,27,-66,27,27,27,27,27,27,27,27,-87,-31,27,-13,27,27,-86,-85,-11,-2,-8,27,27,27,27,-84,]),'GT':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[28,-16,-22,-67,-68,-10,-12,-1,-17,28,28,28,28,-18,-21,-7,-9,-23,-24,-25,-26,28,-60,-61,-62,-63,-64,28,-66,28,28,28,28,28,28,28,28,-87,-31,28,-13,28,28,-86,-85,-11,-2,-8,28,28,28,28,-84,]),'PTO':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[29,-16,-22,-67,-68,-10,-12,-1,-17,29,-69,-78,-79,-18,-21,-7,-9,-23,-24,-25,-26,29,-60,-61,-62,-63,-64,29,-66,-70,-71,29,29,29,29,29,29,-87,-31,29,-13,-74,-75,-86,-85,-11,-2,-8,-27,29,29,29,-84,]),'TILDAEQ':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[30,-16,-22,-67,-68,-10,-12,-1,-17,30,30,30,30,-18,-21,-7,-9,-23,-24,-25,-26,30,30,30,30,30,30,30,-66,30,30,30,30,30,30,30,30,-87,-31,30,-13,30,30,-86,-85,-11,-2,-8,30,30,30,30,-84,]),'AND':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[31,-16,-22,-67,-68,-10,-12,-1,-17,31,-69,31,31,-18,-21,-7,-9,-23,-24,-25,-26,31,-60,-61,-62,-63,-64,31,-66,-70,31,31,31,31,31,31,31,-87,-31,31,-13,31,31,-86,-85,-11,-2,-8,31,31,31,31,-84,]),'OR':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[32,-16,-22,-67,-68,-10,-12,-1,-17,32,-69,32,32,-18,-21,-7,-9,-23,-24,-25,-26,32,-60,-61,-62,-63,-64,32,-66,-70,-71,32,32,32,32,32,32,-87,-31,32,-13,32,32,-86,-85,-11,-2,-8,32,32,32,32,-84,]),'ARROW':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[33,-16,-22,-67,-68,-10,-12,-1,-17,33,-69,-78,-79,-18,-21,-7,-9,-23,-24,-25,-26,33,-60,-61,-62,-63,-64,33,-66,-70,-71,33,33,33,33,33,33,-87,-31,33,-13,-74,-75,-86,-85,-11,-2,-8,-27,33,33,33,-84,]),'IFF':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[34,-16,-22,-67,-68,-10,-12,-1,-17,34,-69,-78,-79,-18,-21,-7,-9,-23,-24,-25,-26,34,-60,-61,-62,-63,-64,34,-66,-70,-71,34,34,34,34,34,34,-87,-31,34,-13,-74,-75,-86,-85,-11,-2,-8,-27,34,34,34,-84,]),'WHENNEXT':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[35,-16,-22,-67,-68,-10,-12,-1,-17,35,-69,-78,-79,-18,-21,-7,-9,-23,-24,-25,-26,35,-60,-61,-62,-63,-64,35,-66,-70,-71,35,35,35,35,35,35,-87,-31,35,-13,-74,-75,-86,-85,-11,-2,-8,-27,35,35,35,-84,]),'WHENPREV':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[36,-16,-22,-67,-68,-10,-12,-1,-17,36,-69,-78,-79,-18,-21,-7,-9,-23,-24,-25,-26,36,-60,-61,-62,-63,-64,36,-66,-70,-71,36,36,36,36,36,36,-87,-31,36,-13,-74,-75,-86,-85,-11,-2,-8,-27,36,36,36,-84,]),'WHENFIRST':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[37,-16,-22,-67,-68,-10,-12,-1,-17,37,-69,-78,-79,-18,-21,-7,-9,-23,-24,-25,-26,37,-60,-61,-62,-63,-64,37,-66,-70,-71,37,37,37,37,37,37,-87,-31,37,-13,-74,-75,-86,-85,-11,-2,-8,-27,37,37,37,-84,]),'WHENLAST':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[38,-16,-22,-67,-68,-10,-12,-1,-17,38,-69,-78,-79,-18,-21,-7,-9,-23,-24,-25,-26,38,-60,-61,-62,-63,-64,38,-66,-70,-71,38,38,38,38,38,38,-87,-31,38,-13,-74,-75,-86,-85,-11,-2,-8,-27,38,38,38,-84,]),'ISA':([1,2,4,6,7,14,15,16,40,41,43,50,51,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,94,98,102,107,109,110,111,113,115,116,118,120,121,127,],[39,-16,-22,-67,-68,-10,-12,-1,-17,39,-69,-78,-79,-18,-21,-7,-9,-23,-24,-25,-26,39,-60,-61,-62,-63,-64,39,-66,-70,-71,39,39,39,39,39,39,-87,-31,39,-13,-74,-75,-86,-85,-11,-2,-8,-27,39,39,39,-84,]),'RPAREN':([2,4,6,7,14,15,16,40,41,43,50,51,53,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,87,90,93,94,98,102,107,109,110,111,113,115,116,118,119,120,121,123,125,126,127,],[-16,-22,-67,-68,-10,-12,-1,-17,82,-69,-78,-79,-28,-18,-21,-7,-9,-23,-24,-25,-26,-59,-60,-61,-62,-63,-64,-65,-66,-70,-71,-72,-73,-80,-81,-82,-83,-87,-31,104,-32,108,111,-29,-13,-74,-75,-86,-85,-11,-2,-8,-27,-76,-33,-77,-30,124,-28,127,-84,]),'ELSE':([2,4,6,7,14,15,16,40,43,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,98,102,107,109,110,111,113,115,116,118,120,127,],[-16,-22,-67,-68,-10,-12,-1,-17,-69,-78,-79,-18,-21,-7,-9,-23,-24,-25,-26,-59,100,-60,-61,-62,-63,-64,-65,-66,-70,-71,-72,-73,-80,-81,-82,-83,-87,-31,-13,-74,-75,-86,-85,-11,-2,-8,-27,-76,-77,-84,]),'COMMA':([2,4,6,7,14,15,16,40,43,44,46,47,48,50,51,53,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,87,90,93,94,98,101,102,103,106,107,109,110,111,113,115,116,118,119,120,121,125,126,127,],[-16,-22,-67,-68,-10,-12,-1,-17,-69,85,-34,-14,85,-78,-79,-28,-18,-21,-7,-9,-23,-24,-25,-26,-59,-60,-61,-62,-63,-64,-65,-66,-70,-71,-72,-73,-80,-81,-82,-83,-87,-31,105,-32,105,112,-29,-13,85,-74,-35,-15,-75,-86,-85,-11,-2,-8,-27,-76,-33,-77,-30,-28,112,-84,]),'LB':([14,16,52,58,83,95,106,113,115,122,],[54,-1,54,54,54,54,54,-2,54,54,]),'RB':([16,95,96,97,113,122,],[-1,-4,113,-5,-2,-6,]),'THIS':([18,39,54,55,],[59,59,97,59,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,5,8,11,12,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,53,84,89,91,92,100,104,108,112,117,125,],[1,41,43,50,51,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,94,102,107,64,64,116,118,120,121,64,94,]),'appelem':([0,3,5,8,11,12,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,53,84,89,91,92,100,104,108,112,117,125,],[2,40,2,2,2,2,56,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'var':([0,5,8,11,12,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,45,49,53,84,89,91,92,100,104,105,108,112,117,125,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,87,87,4,4,4,4,4,4,4,119,4,4,4,4,]),'SYMBOL':([0,3,5,8,11,12,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,53,54,55,84,88,89,91,92,99,100,104,108,112,114,117,125,],[14,14,14,14,14,14,52,14,58,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,58,83,14,95,58,14,106,14,14,14,115,14,14,14,14,122,14,14,]),'simplevars':([9,10,83,],[44,48,101,]),'simplevar':([9,10,83,85,],[46,46,46,103,]),'atype':([18,39,55,],[57,81,98,]),'fmla':([23,91,92,117,],[65,109,110,123,]),'vars':([45,49,],[86,90,]),'terms':([53,125,],[93,126,]),'SYMsubscr':([54,],[96,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> term","S'",1,None,None,None),
  ('SYMBOL -> PRESYMBOL','SYMBOL',1,'p_SYMBOL_PRESYMBOL','ivy_logic_parser.py',16),
  ('SYMBOL -> SYMBOL LB SYMsubscr RB','SYMBOL',4,'p_SYMBOL_SYMBOL_LB_SYMsubscr_RB','ivy_logic_parser.py',20),
  ('LABEL -> LB SYMBOL RB','LABEL',3,'p_LABEL_LB_SYMBOL_RB','ivy_logic_parser.py',24),
  ('SYMsubscr -> SYMBOL','SYMsubscr',1,'p_SYMsubscr_SYMBOL','ivy_logic_parser.py',28),
  ('SYMsubscr -> THIS','SYMsubscr',1,'p_SYMsubscr_THIS','ivy_logic_parser.py',32),
  ('SYMsubscr -> SYMsubscr DOT SYMBOL','SYMsubscr',3,'p_SYMsubscr_SYMsubscr_dot_symbol','ivy_logic_parser.py',36),
  ('atype -> SYMBOL','atype',1,'p_atype_symbol','ivy_logic_parser.py',41),
  ('atype -> atype DOT SYMBOL','atype',3,'p_atype_atype_dot_symbol','ivy_logic_parser.py',46),
  ('atype -> THIS','atype',1,'p_atype_this','ivy_logic_parser.py',52),
  ('appelem -> SYMBOL','appelem',1,'p_appelem_symbol','ivy_logic_parser.py',89),
  ('appelem -> SYMBOL LPAREN terms RPAREN','appelem',4,'p_appelem_appelem_terms','ivy_logic_parser.py',94),
  ('var -> VARIABLE','var',1,'p_var_variable','ivy_logic_parser.py',101),
  ('var -> VARIABLE COLON atype','var',3,'p_var_variable_colon_symbol','ivy_logic_parser.py',106),
  ('simplevar -> VARIABLE','simplevar',1,'p_simplevar_variable','ivy_logic_parser.py',111),
  ('simplevar -> VARIABLE COLON SYMBOL','simplevar',3,'p_simplevar_variable_colon_symbol','ivy_logic_parser.py',116),
  ('term -> appelem','term',1,'p_term_aappelem','ivy_logic_parser.py',143),
  ('term -> OLD appelem','term',2,'p_term_old_aappelem','ivy_logic_parser.py',147),
  ('term -> term DOT appelem','term',3,'p_term_dot_appelem','ivy_logic_parser.py',152),
  ('aterm -> appelem','aterm',1,'p_aterm_aappelem','ivy_logic_parser.py',166),
  ('aterm -> aterm DOT appelem','aterm',3,'p_aterm_aterm_dot_appelem','ivy_logic_parser.py',170),
  ('term -> term COLON atype','term',3,'p_term_term_colon_term','ivy_logic_parser.py',176),
  ('term -> var','term',1,'p_term_var','ivy_logic_parser.py',183),
  ('term -> term PLUS term','term',3,'p_term_term_PLUS_term','ivy_logic_parser.py',189),
  ('term -> term MINUS term','term',3,'p_term_term_MINUS_term','ivy_logic_parser.py',194),
  ('term -> term TIMES term','term',3,'p_term_term_TIMES_term','ivy_logic_parser.py',199),
  ('term -> term DIV term','term',3,'p_term_term_DIV_term','ivy_logic_parser.py',204),
  ('term -> term IF fmla ELSE term','term',5,'p_term_if_fmla_else_term','ivy_logic_parser.py',209),
  ('terms -> <empty>','terms',0,'p_terms','ivy_logic_parser.py',237),
  ('terms -> term','terms',1,'p_terms_term','ivy_logic_parser.py',241),
  ('terms -> terms COMMA term','terms',3,'p_terms_terms_term','ivy_logic_parser.py',245),
  ('term -> LPAREN term RPAREN','term',3,'p_term_lp_term_lp','ivy_logic_parser.py',251),
  ('vars -> var','vars',1,'p_vars_var','ivy_logic_parser.py',256),
  ('vars -> vars COMMA var','vars',3,'p_vars_vars_comma_var','ivy_logic_parser.py',260),
  ('simplevars -> simplevar','simplevars',1,'p_simplevars_simplevar','ivy_logic_parser.py',265),
  ('simplevars -> simplevars COMMA simplevar','simplevars',3,'p_simplevars_simplevars_comma_simplevar','ivy_logic_parser.py',269),
  ('app -> SYMBOL','app',1,'p_app_symbol','ivy_logic_parser.py',276),
  ('app -> SYMBOL LPAREN terms RPAREN','app',4,'p_app_symbol_lp_terms_rp','ivy_logic_parser.py',281),
  ('app -> term infix term','app',3,'p_app_term_infix_term','ivy_logic_parser.py',286),
  ('apps -> app','apps',1,'p_apps_app','ivy_logic_parser.py',292),
  ('apps -> apps COMMA app','apps',3,'p_apps_apps_app','ivy_logic_parser.py',296),
  ('atom -> SYMBOL','atom',1,'p_atom_symbol','ivy_logic_parser.py',303),
  ('atom -> SYMBOL LPAREN terms RPAREN','atom',4,'p_atom_symbol_lp_terms_rp','ivy_logic_parser.py',308),
  ('atoms -> atom','atoms',1,'p_atoms_atom','ivy_logic_parser.py',313),
  ('atoms -> atoms COMMA atom','atoms',3,'p_atoms_atoms_atom','ivy_logic_parser.py',317),
  ('lit -> atom','lit',1,'p_lit_atom','ivy_logic_parser.py',324),
  ('lit -> SYMBOL EQ SYMBOL','lit',3,'p_lit_term_eq_term','ivy_logic_parser.py',329),
  ('lit -> SYMBOL TILDAEQ SYMBOL','lit',3,'p_lit_term_tildaeq_term','ivy_logic_parser.py',334),
  ('lit -> TILDA lit','lit',2,'p_lit_tilda_atom','ivy_logic_parser.py',339),
  ('relop -> EQ','relop',1,'p_relop_eq','ivy_logic_parser.py',344),
  ('relop -> LE','relop',1,'p_relop_le','ivy_logic_parser.py',348),
  ('relop -> LT','relop',1,'p_relop_lt','ivy_logic_parser.py',352),
  ('relop -> GE','relop',1,'p_relop_ge','ivy_logic_parser.py',356),
  ('relop -> GT','relop',1,'p_relop_gt','ivy_logic_parser.py',360),
  ('relop -> PTO','relop',1,'p_relop_pto','ivy_logic_parser.py',364),
  ('infix -> PLUS','infix',1,'p_infix_plus','ivy_logic_parser.py',368),
  ('infix -> MINUS','infix',1,'p_infix_minus','ivy_logic_parser.py',372),
  ('infix -> TIMES','infix',1,'p_infix_times','ivy_logic_parser.py',376),
  ('infix -> DIV','infix',1,'p_infix_div','ivy_logic_parser.py',380),
  ('fmla -> term','fmla',1,'p_fmla_term','ivy_logic_parser.py',386),
  ('term -> term EQ term','term',3,'p_term_term_EQ_term','ivy_logic_parser.py',500),
  ('term -> term LE term','term',3,'p_term_term_LE_term','ivy_logic_parser.py',505),
  ('term -> term LT term','term',3,'p_term_term_LT_term','ivy_logic_parser.py',510),
  ('term -> term GE term','term',3,'p_term_term_GE_term','ivy_logic_parser.py',515),
  ('term -> term GT term','term',3,'p_term_term_GT_term','ivy_logic_parser.py',520),
  ('term -> term PTO term','term',3,'p_term_term_PTO_term','ivy_logic_parser.py',525),
  ('term -> term TILDAEQ term','term',3,'p_term_term_tildaeq_term','ivy_logic_parser.py',530),
  ('term -> TRUE','term',1,'p_term_true','ivy_logic_parser.py',535),
  ('term -> FALSE','term',1,'p_term_false','ivy_logic_parser.py',540),
  ('term -> TILDA term','term',2,'p_term_not_term','ivy_logic_parser.py',545),
  ('term -> term AND term','term',3,'p_term_term_and_term','ivy_logic_parser.py',550),
  ('term -> term OR term','term',3,'p_term_term_or_term','ivy_logic_parser.py',559),
  ('term -> term ARROW term','term',3,'p_term_term_arrow_term','ivy_logic_parser.py',568),
  ('term -> term IFF term','term',3,'p_term_term_iff_term','ivy_logic_parser.py',575),
  ('term -> FORALL simplevars DOT term','term',4,'p_term_forall_simplevars_dot_term','ivy_logic_parser.py',580),
  ('term -> EXISTS simplevars DOT term','term',4,'p_term_exists_simplevars_dot_term','ivy_logic_parser.py',585),
  ('term -> FORALL LPAREN vars RPAREN term','term',5,'p_term_forall_lp_vars_lp_term','ivy_logic_parser.py',590),
  ('term -> EXISTS LPAREN vars RPAREN term','term',5,'p_term_exists_lp_vars_lp_term','ivy_logic_parser.py',595),
  ('term -> GLOBALLY term','term',2,'p_term_globally_term','ivy_logic_parser.py',600),
  ('term -> EVENTUALLY term','term',2,'p_term_eventually_term','ivy_logic_parser.py',605),
  ('term -> term WHENNEXT term','term',3,'p_term_term_whennext_term','ivy_logic_parser.py',610),
  ('term -> term WHENPREV term','term',3,'p_term_term_whenprev_term','ivy_logic_parser.py',615),
  ('term -> term WHENFIRST term','term',3,'p_term_term_whenfirst_term','ivy_logic_parser.py',620),
  ('term -> term WHENLAST term','term',3,'p_term_term_whenlast_term','ivy_logic_parser.py',625),
  ('term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN','term',10,'p_term_namedbinder_vars_dot_term','ivy_logic_parser.py',631),
  ('term -> DOLLAR SYMBOL DOT fmla','term',4,'p_term_namedbinder_dot_fmla','ivy_logic_parser.py',638),
  ('term -> DOLLAR SYMBOL DOLLAR fmla','term',4,'p_term_namedbinder_dollar_fmla','ivy_logic_parser.py',643),
  ('term -> term ISA atype','term',3,'p_fmla_fmla_isa_atype','ivy_logic_parser.py',649),
]
