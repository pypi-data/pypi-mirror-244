# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .feedback_response_model import FeedbackResponseModel
from .history_item_response_model_state import HistoryItemResponseModelState
from .history_item_response_model_voice_category import HistoryItemResponseModelVoiceCategory

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class HistoryItemResponseModel(pydantic.BaseModel):
    history_item_id: str
    request_id: str
    voice_id: str
    model_id: str
    voice_name: str
    voice_category: HistoryItemResponseModelVoiceCategory
    text: str
    date_unix: int
    character_count_change_from: int
    character_count_change_to: int
    content_type: str
    state: HistoryItemResponseModelState
    settings: typing.Dict[str, typing.Any]
    feedback: FeedbackResponseModel

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
