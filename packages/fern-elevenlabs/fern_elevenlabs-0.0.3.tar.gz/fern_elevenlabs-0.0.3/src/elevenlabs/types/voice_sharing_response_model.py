# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .voice_sharing_response_model_review_status import VoiceSharingResponseModelReviewStatus
from .voice_sharing_response_model_status import VoiceSharingResponseModelStatus

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class VoiceSharingResponseModel(pydantic.BaseModel):
    status: VoiceSharingResponseModelStatus
    history_item_sample_id: str
    original_voice_id: str
    public_owner_id: str
    liked_by_count: int
    cloned_by_count: int
    whitelisted_emails: typing.List[str]
    name: str
    labels: typing.Dict[str, str]
    description: str
    review_status: VoiceSharingResponseModelReviewStatus
    review_message: str
    enabled_in_library: bool
    financial_rewards_enabled: bool

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
