Metadata-Version: 2.1
Name: django-bigquery-exporter
Version: 0.1.9
Summary: A Django plugin for exporting CMS data to Google BigQuery.
Home-page: https://www.industrydive.com/
Author: Dave Frame
Author-email: dframe22@gmail.com
License: MIT License
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 3.2
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Requires-Python: >=3.8
License-File: LICENSE
Requires-Dist: Django >=3.2.4
Requires-Dist: google-auth >=1.32.1
Requires-Dist: google-cloud-bigquery >=2.30.1

===============================
Django BigQuery Exporter
===============================

Django BigQuery Exporter is simple library providing an admin-esque base class for batching and exporting Django models to Google BigQuery.

Quick start
-----------
1. Install Django BigQuery Exporter: ``pip install django-bigquery-exporter``


2. Make sure you have your Google Cloud credentials set up. See [here](https://cloud.google.com/docs/authentication/getting-started) for more information.

3. Import and create a subclass of `BigQueryExporter` and define the `define_queryset` method
::

    from bigquery_exporter.base import BigQueryExporter

    class MyExporter(BigQueryExporter):
        def define_queryset(self):
            return MyModel.objects.all()

4. Call the `export` method
::

    exporter = MyExporter()
    exporter.export()


Et voila! Your data is now in BigQuery.
