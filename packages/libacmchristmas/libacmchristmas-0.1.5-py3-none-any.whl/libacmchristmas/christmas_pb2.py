# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: christmas.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0f\x63hristmas.proto\x12\tchristmas\"\xf8\x01\n\x10LEDClientMessage\x12\x41\n\x13get_led_canvas_info\x18\x02 \x01(\x0b\x32\".christmas.GetLEDCanvasInfoRequestH\x00\x12\x38\n\x0eset_led_canvas\x18\x03 \x01(\x0b\x32\x1e.christmas.SetLEDCanvasRequestH\x00\x12-\n\x08get_leds\x18\x04 \x01(\x0b\x32\x19.christmas.GetLEDsRequestH\x00\x12-\n\x08set_leds\x18\x05 \x01(\x0b\x32\x19.christmas.SetLEDsRequestH\x00\x42\t\n\x07message\"\xaf\x01\n\x10LEDServerMessage\x12\x42\n\x13get_led_canvas_info\x18\x02 \x01(\x0b\x32#.christmas.GetLEDCanvasInfoResponseH\x00\x12.\n\x08get_leds\x18\x03 \x01(\x0b\x32\x1a.christmas.GetLEDsResponseH\x00\x12\x12\n\x05\x65rror\x18\x64 \x01(\tH\x01\x88\x01\x01\x42\t\n\x07messageB\x08\n\x06_error\"\x10\n\x0eGetLEDsRequest\"\x1f\n\x0fGetLEDsResponse\x12\x0c\n\x04leds\x18\x01 \x03(\x07\"\x1e\n\x0eSetLEDsRequest\x12\x0c\n\x04leds\x18\x01 \x03(\x07\"\x19\n\x17GetLEDCanvasInfoRequest\"9\n\x18GetLEDCanvasInfoResponse\x12\r\n\x05width\x18\x01 \x01(\r\x12\x0e\n\x06height\x18\x02 \x01(\r\"<\n\x13SetLEDCanvasRequest\x12%\n\x06pixels\x18\x03 \x01(\x0b\x32\x15.christmas.RGBAPixels\"\x1c\n\nRGBAPixels\x12\x0e\n\x06pixels\x18\x01 \x01(\x0c\x42\x35Z3libdb.so/acm-christmas/lib/christmas/go/christmaspbb\x06proto3')



_LEDCLIENTMESSAGE = DESCRIPTOR.message_types_by_name['LEDClientMessage']
_LEDSERVERMESSAGE = DESCRIPTOR.message_types_by_name['LEDServerMessage']
_GETLEDSREQUEST = DESCRIPTOR.message_types_by_name['GetLEDsRequest']
_GETLEDSRESPONSE = DESCRIPTOR.message_types_by_name['GetLEDsResponse']
_SETLEDSREQUEST = DESCRIPTOR.message_types_by_name['SetLEDsRequest']
_GETLEDCANVASINFOREQUEST = DESCRIPTOR.message_types_by_name['GetLEDCanvasInfoRequest']
_GETLEDCANVASINFORESPONSE = DESCRIPTOR.message_types_by_name['GetLEDCanvasInfoResponse']
_SETLEDCANVASREQUEST = DESCRIPTOR.message_types_by_name['SetLEDCanvasRequest']
_RGBAPIXELS = DESCRIPTOR.message_types_by_name['RGBAPixels']
LEDClientMessage = _reflection.GeneratedProtocolMessageType('LEDClientMessage', (_message.Message,), {
  'DESCRIPTOR' : _LEDCLIENTMESSAGE,
  '__module__' : 'christmas_pb2'
  # @@protoc_insertion_point(class_scope:christmas.LEDClientMessage)
  })
_sym_db.RegisterMessage(LEDClientMessage)

LEDServerMessage = _reflection.GeneratedProtocolMessageType('LEDServerMessage', (_message.Message,), {
  'DESCRIPTOR' : _LEDSERVERMESSAGE,
  '__module__' : 'christmas_pb2'
  # @@protoc_insertion_point(class_scope:christmas.LEDServerMessage)
  })
_sym_db.RegisterMessage(LEDServerMessage)

GetLEDsRequest = _reflection.GeneratedProtocolMessageType('GetLEDsRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETLEDSREQUEST,
  '__module__' : 'christmas_pb2'
  # @@protoc_insertion_point(class_scope:christmas.GetLEDsRequest)
  })
_sym_db.RegisterMessage(GetLEDsRequest)

GetLEDsResponse = _reflection.GeneratedProtocolMessageType('GetLEDsResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETLEDSRESPONSE,
  '__module__' : 'christmas_pb2'
  # @@protoc_insertion_point(class_scope:christmas.GetLEDsResponse)
  })
_sym_db.RegisterMessage(GetLEDsResponse)

SetLEDsRequest = _reflection.GeneratedProtocolMessageType('SetLEDsRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETLEDSREQUEST,
  '__module__' : 'christmas_pb2'
  # @@protoc_insertion_point(class_scope:christmas.SetLEDsRequest)
  })
_sym_db.RegisterMessage(SetLEDsRequest)

GetLEDCanvasInfoRequest = _reflection.GeneratedProtocolMessageType('GetLEDCanvasInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETLEDCANVASINFOREQUEST,
  '__module__' : 'christmas_pb2'
  # @@protoc_insertion_point(class_scope:christmas.GetLEDCanvasInfoRequest)
  })
_sym_db.RegisterMessage(GetLEDCanvasInfoRequest)

GetLEDCanvasInfoResponse = _reflection.GeneratedProtocolMessageType('GetLEDCanvasInfoResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETLEDCANVASINFORESPONSE,
  '__module__' : 'christmas_pb2'
  # @@protoc_insertion_point(class_scope:christmas.GetLEDCanvasInfoResponse)
  })
_sym_db.RegisterMessage(GetLEDCanvasInfoResponse)

SetLEDCanvasRequest = _reflection.GeneratedProtocolMessageType('SetLEDCanvasRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETLEDCANVASREQUEST,
  '__module__' : 'christmas_pb2'
  # @@protoc_insertion_point(class_scope:christmas.SetLEDCanvasRequest)
  })
_sym_db.RegisterMessage(SetLEDCanvasRequest)

RGBAPixels = _reflection.GeneratedProtocolMessageType('RGBAPixels', (_message.Message,), {
  'DESCRIPTOR' : _RGBAPIXELS,
  '__module__' : 'christmas_pb2'
  # @@protoc_insertion_point(class_scope:christmas.RGBAPixels)
  })
_sym_db.RegisterMessage(RGBAPixels)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z3libdb.so/acm-christmas/lib/christmas/go/christmaspb'
  _LEDCLIENTMESSAGE._serialized_start=31
  _LEDCLIENTMESSAGE._serialized_end=279
  _LEDSERVERMESSAGE._serialized_start=282
  _LEDSERVERMESSAGE._serialized_end=457
  _GETLEDSREQUEST._serialized_start=459
  _GETLEDSREQUEST._serialized_end=475
  _GETLEDSRESPONSE._serialized_start=477
  _GETLEDSRESPONSE._serialized_end=508
  _SETLEDSREQUEST._serialized_start=510
  _SETLEDSREQUEST._serialized_end=540
  _GETLEDCANVASINFOREQUEST._serialized_start=542
  _GETLEDCANVASINFOREQUEST._serialized_end=567
  _GETLEDCANVASINFORESPONSE._serialized_start=569
  _GETLEDCANVASINFORESPONSE._serialized_end=626
  _SETLEDCANVASREQUEST._serialized_start=628
  _SETLEDCANVASREQUEST._serialized_end=688
  _RGBAPIXELS._serialized_start=690
  _RGBAPIXELS._serialized_end=718
# @@protoc_insertion_point(module_scope)
