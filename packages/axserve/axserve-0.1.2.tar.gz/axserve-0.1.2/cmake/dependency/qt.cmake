include_guard(GLOBAL)

message(CHECK_START "Checking Qt6 provider")

set(QT6_COMPONENTS Widgets Network AxContainer LinguistTools)
set(QT6_SUBMODULES qtbase qtactiveqt qttools)

set(QT6_CMAKE_CROSSCOMPILING "${CMAKE_CROSSCOMPILING}")
if(QT6_CMAKE_CROSSCOMPILING
        AND CMAKE_SYSTEM_NAME STREQUAL CMAKE_HOST_SYSTEM_NAME
        AND CMAKE_HOST_SYSTEM_PROCESSOR STREQUAL "AMD64"
        AND CMAKE_SYSTEM_PROCESSOR STREQUAL "x86")
    set(QT6_CMAKE_CROSSCOMPILING FALSE)
endif()

if(AXSERVE_QT6_PROVIDER STREQUAL "module")
    set(QT6_EXTERNAL_NAME "Qt6")

    set(QT6_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/third_party/qt")
    set(QT6_PREFIX_DIR "${CMAKE_CURRENT_BINARY_DIR}/3rd/qt")
    set(QT6_BINARY_DIR "${QT6_PREFIX_DIR}/build")
    
    if(NOT EXISTS "${QT6_SOURCE_DIR}/CMakeLists.txt")
        set(QT6_GIT_REPOSITORY "https://github.com/qt/qt5.git")
        set(QT6_GIT_TAG "v6.6.0")
        set(QT6_GIT_SUBMODULES ${QT6_SUBMODULES})
    endif()

    set(QT6_CMAKE_COMMAND "${CMAKE_COMMAND}")
    set(QT6_CMAKE_GENERATOR "Ninja") # use ninja explicitly for qt

    if(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        set(QT6_CMAKE_ARGS
            "-DCMAKE_SYSTEM_NAME:STRING=${CMAKE_SYSTEM_NAME}"
            "-DCMAKE_SYSTEM_PROCESSOR:STRING=${CMAKE_SYSTEM_PROCESSOR}"
            "-P" "${CMAKE_CURRENT_LIST_DIR}/../msvc/env-msvc.cmake"
            "--" "${QT6_CMAKE_COMMAND}")
        set(QT6_BUILD_COMMAND
            "${QT6_CMAKE_COMMAND}" ${QT6_CMAKE_ARGS}
            "--build" "${QT6_BINARY_DIR}"
            "--parallel")
        set(QT6_INSTALL_COMMAND
            "${QT6_CMAKE_COMMAND}"
            "--install" "${QT6_BINARY_DIR}")
    endif()

    include("${CMAKE_CURRENT_LIST_DIR}/zlib.cmake")
    set(QT6_CMAKE_CACHE_ARGS
        "-DCMAKE_INSTALL_PREFIX:PATH=${QT6_PREFIX_DIR}"
        "-DCMAKE_PREFIX_PATH:PATH=${CMAKE_PREFIX_PATH}"
        "-DCMAKE_SYSTEM_NAME:STRING=${CMAKE_SYSTEM_NAME}"
        "-DCMAKE_SYSTEM_PROCESSOR:STRING=${CMAKE_SYSTEM_PROCESSOR}"
        "-DCMAKE_CROSSCOMPILING:BOOL=${QT6_CMAKE_CROSSCOMPILING}"
        "-DCMAKE_TOOLCHAIN_FILE:PATH=${CMAKE_TOOLCHAIN_FILE}"
        "-DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}"
        "-DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}"
        "-DCMAKE_CXX_STANDARD:STRING=${CMAKE_CXX_STANDARD}"
        "-DCMAKE_CXX_STANDARD_REQUIRED:BOOL=${CMAKE_CXX_STANDARD_REQUIRED}"
        "-DZLIB_USE_STATIC_LIBS:BOOL=${ZLIB_USE_STATIC_LIBS}"
        "-DBUILD_qtwebengine:BOOL=OFF"
        "-DFEATURE_system_zlib:BOOL=ON"
    )
    if(CMAKE_CXX_STANDARD EQUAL 20)
        list(APPEND QT6_CMAKE_CACHE_ARGS "-DFEATURE_cxx20:BOOL=ON")
    endif()
    set(QT6_DEPENDS "")
    if(AXSERVE_ZLIB_PROVIDER STREQUAL "module")
        list(APPEND QT6_CMAKE_CACHE_ARGS
            "-DZLIB_ROOT:PATH=${ZLIB_ROOT}"
        )
        list(APPEND QT6_DEPENDS ZLIB)
    endif()

    include(ExternalProject)
    ExternalProject_Add("${QT6_EXTERNAL_NAME}"
        PREFIX "${QT6_PREFIX_DIR}"
        SOURCE_DIR "${QT6_SOURCE_DIR}"
        BINARY_DIR "${QT6_BINARY_DIR}"
        INSTALL_DIR "${QT6_PREFIX_DIR}"
        GIT_REPOSITORY "${QT6_GIT_REPOSITORY}"
        GIT_TAG "${QT6_GIT_TAG}"
        GIT_SUBMODULES ${QT6_GIT_SUBMODULES}
        GIT_SUBMODULES_RECURSE TRUE
        GIT_SHALLOW TRUE
        CMAKE_COMMAND "${QT6_CMAKE_COMMAND}"
        CMAKE_GENERATOR "${QT6_CMAKE_GENERATOR}"
        CMAKE_ARGS ${QT6_CMAKE_ARGS}
        CMAKE_CACHE_ARGS ${QT6_CMAKE_CACHE_ARGS}
        BUILD_COMMAND ${QT6_BUILD_COMMAND}
        INSTALL_COMMAND ${QT6_INSTALL_COMMAND}
        DEPENDS ${QT6_DEPENDS}
    )

    ExternalProject_Get_Property(Qt6 INSTALL_DIR)
    set(QT6_INSTALL_DIR "${INSTALL_DIR}")
    list(APPEND CMAKE_PREFIX_PATH "${QT6_INSTALL_DIR}")

    message(CHECK_PASS "${AXSERVE_QT6_PROVIDER}")
elseif(AXSERVE_QT6_PROVIDER STREQUAL "package")
    find_package(Qt6 REQUIRED COMPONENTS ${QT6_COMPONENTS})
    message(CHECK_PASS "${AXSERVE_QT6_PROVIDER}")
else()
    message(CHECK_FAIL "${AXSERVE_QT6_PROVIDER}")
endif()
