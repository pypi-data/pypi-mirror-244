# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_miss.ipynb.

# %% auto 0
__all__ = ['none', 'nan', 'nanq', 'nans']

# %% ../nbs/03_miss.ipynb 6
from math import nan as pynan
from numbers import Number

# %% ../nbs/03_miss.ipynb 8
from typing import TypeAlias, Literal
from types import NoneType

# %% ../nbs/03_miss.ipynb 10
try: from torch import nan as tnan
except: tnan = pynan

# %% ../nbs/03_miss.ipynb 11
try: from pandas import NA as pdNA
except: pdNA = pynan

# %% ../nbs/03_miss.ipynb 12
try: from numpy import (nan as npnan, NaN as npNaN, NAN as npNAN)
except: npnan, npNaN, npNAN = pynan, pynan, pynan

# %% ../nbs/03_miss.ipynb 14
from ptyp import Alias, Not, Opt

# %% ../nbs/03_miss.ipynb 16
from .bool import bools
from .nums import nums

# %% ../nbs/03_miss.ipynb 19
@Alias(None, NoneType)
class none: '''None or NoneType'''

# %% ../nbs/03_miss.ipynb 22
@Alias(pynan, pdNA, npnan, npNaN, npNAN)
class nan: '''math.nan, pd.NA, np.nan, np.NaN, or np.NAN'''

@Opt(nan)
class nanq: '''math.nan, pd.NA, np.nan, np.NaN, np.NAN, or None'''

# %% ../nbs/03_miss.ipynb 23
@Alias(list, attrs=dict(dtype=nan))
class nans: '''list of nan'''
